OpenShadingLanguage 1.00
# Compiled by oslc 1.10.10
# options: -q -O2 -IC:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders -IC:/b/buildbot-worker-windows/windows_291/blender.git/../lib/win64_vc15/osl/shaders -o C:/b/buildbot-worker-windows/windows_291/build/intern/cycles/kernel/shaders/node_musgrave_texture.oso
shader node_musgrave_texture
param	int	use_mapping	0		%read{7,7} %write{2147483647,-1}
param	matrix	mapping	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0		%read{8,8} %write{2147483647,-1}
param	string	type	"fBM"		%read{12,1081} %write{2147483647,-1}
param	string	dimensions	"3D"		%read{9,806} %write{2147483647,-1}
param	point	Vector	0 0 0		%read{6,6} %write{0,0} %initexpr
param	float	W	0		%read{11,811} %write{2147483647,-1}
param	float	Dimension	2		%read{1,1} %write{2147483647,-1}
param	float	Scale	5		%read{11,816} %write{2147483647,-1}
param	float	Detail	2		%read{3,3} %write{2147483647,-1}
param	float	Lacunarity	2		%read{5,5} %write{2147483647,-1}
param	float	Offset	0		%read{110,1152} %write{2147483647,-1}
param	float	Gain	1		%read{111,1059} %write{2147483647,-1}
oparam	float	Fac	0		%read{2147483647,-1} %write{54,1159}
global	point	P	%read{0,0} %write{2147483647,-1}
local	float	___440_f	%read{22,251} %write{22,246}
local	float	___441_f	%read{280,548} %write{280,543}
local	float	___442_f	%read{569,798} %write{569,793}
local	float	___443_f	%read{835,1151} %write{835,1146}
local	float	___502_p	%read{65,86} %write{58,80}
local	float	___502_value	%read{65,95} %write{59,94}
local	float	___502_pwr	%read{65,93} %write{60,80}
local	float	___502_pwHL	%read{65,80} %write{62,62}
local	int	___503_i	%read{65,80} %write{64,80}
local	float	___502_rmd	%read{83,92} %write{82,82}
local	float	___506_p	%read{22,45} %write{15,38}
local	float	___506_value	%read{22,54} %write{16,53}
local	float	___506_pwr	%read{22,43} %write{17,38}
local	float	___506_pwHL	%read{22,38} %write{19,19}
local	int	___507_i	%read{22,38} %write{21,38}
local	float	___506_rmd	%read{41,43} %write{40,40}
local	float	___510_p	%read{213,246} %write{208,240}
local	float	___510_pwHL	%read{211,240} %write{210,210}
local	float	___510_pwr	%read{223,253} %write{211,240}
local	float	___510_value	%read{223,257} %write{219,256}
local	int	___511_i	%read{223,240} %write{222,240}
local	float	___512_increment	%read{223,240} %write{223,240}
local	float	___510_rmd	%read{243,255} %write{242,242}
local	float	___513_increment	%read{255,255} %write{254,254}
local	float	___514_p	%read{104,148} %write{99,142}
local	float	___514_pwHL	%read{102,142} %write{101,101}
local	float	___514_pwr	%read{115,155} %write{102,142}
local	float	___514_value	%read{111,158} %write{110,157}
local	float	___514_weight	%read{115,142} %write{111,142}
local	int	___515_i	%read{115,142} %write{114,142}
local	float	___516_signal	%read{115,142} %write{115,142}
local	float	___514_rmd	%read{145,156} %write{144,144}
local	float	___519_p	%read{167,203} %write{162,203}
local	float	___519_pwHL	%read{165,203} %write{164,164}
local	float	___519_pwr	%read{180,203} %write{165,203}
local	float	___519_signal	%read{175,203} %write{174,203}
local	float	___519_value	%read{180,204} %write{176,203}
local	float	___519_weight	%read{180,203} %write{177,203}
local	int	___520_i	%read{180,203} %write{179,203}
local	float	___522_p.x	%read{329,355} %write{321,349} %mystruct{___522_p} %mystructfield{0}
local	float	___522_p.y	%read{329,355} %write{322,349} %mystruct{___522_p} %mystructfield{1}
local	float	___522_value	%read{329,364} %write{323,363}
local	float	___522_pwr	%read{329,362} %write{324,349}
local	float	___522_pwHL	%read{329,349} %write{326,326}
local	int	___523_i	%read{329,349} %write{328,349}
local	float	___522_rmd	%read{352,361} %write{351,351}
local	float	___526_p.x	%read{280,308} %write{272,301} %mystruct{___526_p} %mystructfield{0}
local	float	___526_p.y	%read{280,308} %write{273,301} %mystruct{___526_p} %mystructfield{1}
local	float	___526_value	%read{280,317} %write{274,316}
local	float	___526_pwr	%read{280,306} %write{275,301}
local	float	___526_pwHL	%read{280,301} %write{277,277}
local	int	___527_i	%read{280,301} %write{279,301}
local	float	___526_rmd	%read{304,306} %write{303,303}
local	float	___530_p.x	%read{500,543} %write{494,537} %mystruct{___530_p} %mystructfield{0}
local	float	___530_p.y	%read{500,543} %write{495,537} %mystruct{___530_p} %mystructfield{1}
local	float	___530_pwHL	%read{498,537} %write{497,497}
local	float	___530_pwr	%read{515,550} %write{498,537}
local	float	___530_value	%read{515,554} %write{506,553}
local	int	___531_i	%read{515,537} %write{514,537}
local	float	___532_increment	%read{515,537} %write{515,537}
local	float	___530_rmd	%read{540,552} %write{539,539}
local	float	___533_increment	%read{552,552} %write{551,551}
local	float	___534_p.x	%read{374,428} %write{368,422} %mystruct{___534_p} %mystructfield{0}
local	float	___534_p.y	%read{374,428} %write{369,422} %mystruct{___534_p} %mystructfield{1}
local	float	___534_pwHL	%read{372,422} %write{371,371}
local	float	___534_pwr	%read{390,435} %write{372,422}
local	float	___534_value	%read{381,438} %write{380,437}
local	float	___534_weight	%read{390,422} %write{381,422}
local	int	___535_i	%read{390,422} %write{389,422}
local	float	___536_signal	%read{390,422} %write{390,422}
local	float	___534_rmd	%read{425,436} %write{424,424}
local	float	___539_p.x	%read{448,489} %write{442,489} %mystruct{___539_p} %mystructfield{0}
local	float	___539_p.y	%read{448,489} %write{443,489} %mystruct{___539_p} %mystructfield{1}
local	float	___539_pwHL	%read{446,489} %write{445,445}
local	float	___539_pwr	%read{461,489} %write{446,489}
local	float	___539_signal	%read{456,489} %write{455,489}
local	float	___539_value	%read{461,490} %write{457,489}
local	float	___539_weight	%read{461,489} %write{458,489}
local	int	___540_i	%read{461,489} %write{460,489}
local	point	___542_p	%read{612,633} %write{605,627}
local	float	___542_value	%read{612,642} %write{606,641}
local	float	___542_pwr	%read{612,640} %write{607,627}
local	float	___542_pwHL	%read{612,627} %write{609,609}
local	int	___543_i	%read{612,627} %write{611,627}
local	float	___542_rmd	%read{630,639} %write{629,629}
local	point	___546_p	%read{569,592} %write{562,585}
local	float	___546_value	%read{569,601} %write{563,600}
local	float	___546_pwr	%read{569,590} %write{564,585}
local	float	___546_pwHL	%read{569,585} %write{566,566}
local	int	___547_i	%read{569,585} %write{568,585}
local	float	___546_rmd	%read{588,590} %write{587,587}
local	point	___550_p	%read{760,793} %write{755,787}
local	float	___550_pwHL	%read{758,787} %write{757,757}
local	float	___550_pwr	%read{770,800} %write{758,787}
local	float	___550_value	%read{770,804} %write{766,803}
local	int	___551_i	%read{770,787} %write{769,787}
local	float	___552_increment	%read{770,787} %write{770,787}
local	float	___550_rmd	%read{790,802} %write{789,789}
local	float	___553_increment	%read{802,802} %write{801,801}
local	point	___554_p	%read{651,695} %write{646,689}
local	float	___554_pwHL	%read{649,689} %write{648,648}
local	float	___554_pwr	%read{662,702} %write{649,689}
local	float	___554_value	%read{658,705} %write{657,704}
local	float	___554_weight	%read{662,689} %write{658,689}
local	int	___555_i	%read{662,689} %write{661,689}
local	float	___556_signal	%read{662,689} %write{662,689}
local	float	___554_rmd	%read{692,703} %write{691,691}
local	point	___559_p	%read{714,750} %write{709,750}
local	float	___559_pwHL	%read{712,750} %write{711,711}
local	float	___559_pwr	%read{727,750} %write{712,750}
local	float	___559_signal	%read{722,750} %write{721,750}
local	float	___559_value	%read{727,751} %write{723,750}
local	float	___559_weight	%read{727,750} %write{724,750}
local	int	___560_i	%read{727,750} %write{726,750}
local	float	___562_p.x	%read{892,923} %write{882,917} %mystruct{___562_p} %mystructfield{0}
local	float	___562_p.y	%read{892,923} %write{883,917} %mystruct{___562_p} %mystructfield{1}
local	float	___562_p.z	%read{892,923} %write{884,917} %mystruct{___562_p} %mystructfield{2}
local	float	___562_p.w	%read{892,924} %write{885,917} %mystruct{___562_p} %mystructfield{3}
local	float	___562_value	%read{892,933} %write{886,932}
local	float	___562_pwr	%read{892,931} %write{887,917}
local	float	___562_pwHL	%read{892,917} %write{889,889}
local	int	___563_i	%read{892,917} %write{891,917}
local	float	___562_rmd	%read{920,930} %write{919,919}
local	float	___566_p.x	%read{835,868} %write{825,861} %mystruct{___566_p} %mystructfield{0}
local	float	___566_p.y	%read{835,868} %write{826,861} %mystruct{___566_p} %mystructfield{1}
local	float	___566_p.z	%read{835,868} %write{827,861} %mystruct{___566_p} %mystructfield{2}
local	float	___566_p.w	%read{835,869} %write{828,861} %mystruct{___566_p} %mystructfield{3}
local	float	___566_value	%read{835,878} %write{829,877}
local	float	___566_pwr	%read{835,866} %write{830,861}
local	float	___566_pwHL	%read{835,861} %write{832,832}
local	int	___567_i	%read{835,861} %write{834,861}
local	float	___566_rmd	%read{864,866} %write{863,863}
local	float	___570_p.x	%read{1092,1145} %write{1084,1139} %mystruct{___570_p} %mystructfield{0}
local	float	___570_p.y	%read{1092,1145} %write{1085,1139} %mystruct{___570_p} %mystructfield{1}
local	float	___570_p.z	%read{1092,1145} %write{1086,1139} %mystruct{___570_p} %mystructfield{2}
local	float	___570_p.w	%read{1093,1146} %write{1087,1139} %mystruct{___570_p} %mystructfield{3}
local	float	___570_pwHL	%read{1090,1139} %write{1089,1089}
local	float	___570_pwr	%read{1112,1153} %write{1090,1139}
local	float	___570_value	%read{1112,1157} %write{1099,1156}
local	int	___571_i	%read{1112,1139} %write{1111,1139}
local	float	___572_increment	%read{1112,1139} %write{1112,1139}
local	float	___570_rmd	%read{1142,1155} %write{1141,1141}
local	float	___573_increment	%read{1155,1155} %write{1154,1154}
local	float	___574_p.x	%read{945,1009} %write{937,1003} %mystruct{___574_p} %mystructfield{0}
local	float	___574_p.y	%read{945,1009} %write{938,1003} %mystruct{___574_p} %mystructfield{1}
local	float	___574_p.z	%read{945,1009} %write{939,1003} %mystruct{___574_p} %mystructfield{2}
local	float	___574_p.w	%read{946,1010} %write{940,1003} %mystruct{___574_p} %mystructfield{3}
local	float	___574_pwHL	%read{943,1003} %write{942,942}
local	float	___574_pwr	%read{966,1017} %write{943,1003}
local	float	___574_value	%read{953,1020} %write{952,1019}
local	float	___574_weight	%read{966,1003} %write{953,1003}
local	int	___575_i	%read{966,1003} %write{965,1003}
local	float	___576_signal	%read{966,1003} %write{966,1003}
local	float	___574_rmd	%read{1006,1018} %write{1005,1005}
local	float	___579_p.x	%read{1032,1079} %write{1024,1079} %mystruct{___579_p} %mystructfield{0}
local	float	___579_p.y	%read{1032,1079} %write{1025,1079} %mystruct{___579_p} %mystructfield{1}
local	float	___579_p.z	%read{1032,1079} %write{1026,1079} %mystruct{___579_p} %mystructfield{2}
local	float	___579_p.w	%read{1033,1079} %write{1027,1079} %mystruct{___579_p} %mystructfield{3}
local	float	___579_pwHL	%read{1030,1079} %write{1029,1029}
local	float	___579_pwr	%read{1046,1079} %write{1030,1079}
local	float	___579_signal	%read{1041,1079} %write{1040,1079}
local	float	___579_value	%read{1046,1080} %write{1042,1079}
local	float	___579_weight	%read{1046,1079} %write{1043,1079}
local	int	___580_i	%read{1046,1079} %write{1045,1079}
local	float	dimension	%read{18,1088} %write{1,1}
local	float	octaves	%read{22,1141} %write{4,4}
local	float	lacunarity	%read{19,1139} %write{5,5}
local	point	s	%read{8,810} %write{6,8}
local	float	___582_p	%read{15,208} %write{11,11}
local	float	___589_p.x	%read{272,494} %write{267,267} %mystruct{___589_p} %mystructfield{0}
local	float	___589_p.y	%read{273,495} %write{268,268} %mystruct{___589_p} %mystructfield{1}
local	point	___596_p	%read{562,755} %write{558,558}
local	float	___603_p.x	%read{825,1084} %write{818,818} %mystruct{___603_p} %mystructfield{0}
local	float	___603_p.y	%read{826,1085} %write{819,819} %mystruct{___603_p} %mystructfield{1}
local	float	___603_p.z	%read{827,1086} %write{820,820} %mystruct{___603_p} %mystructfield{2}
local	float	___603_p.w	%read{828,1087} %write{821,821} %mystruct{___603_p} %mystructfield{3}
const	float	$const1	9.99999975e-06		%read{1,5} %write{2147483647,-1}
const	float	$const2	0		%read{4,1159} %write{2147483647,-1}
const	float	$const3	16		%read{3,3} %write{2147483647,-1}
const	string	$const4	"clamp"		%read{2,1060} %write{2147483647,-1}
temp	float	$tmp1	%read{4,4} %write{3,3}
const	string	$const5	"1D"		%read{9,9} %write{2147483647,-1}
temp	int	$tmp2	%read{10,10} %write{9,9}
const	string	$const6	"multifractal"		%read{12,822} %write{2147483647,-1}
temp	int	$tmp3	%read{13,13} %write{12,12}
const	string	$const7	"noise_musgrave_multi_fractal_1d"		%read{14,14} %write{2147483647,-1}
const	float	$const8	1		%read{16,1061} %write{2147483647,-1}
temp	float	$tmp4	%read{19,19} %write{18,18}
const	int	$const9	0		%read{21,1114} %write{2147483647,-1}
temp	int	$tmp5	%read{22,38} %write{22,38}
temp	int	$tmp6	%read{22,38} %write{22,38}
temp	int	$tmp7	%read{20,38} %write{21,38}
temp	float	$tmp8	%read{22,38} %write{22,38}
const	string	$const10	"safe_snoise"		%read{25,1144} %write{2147483647,-1}
const	string	$const11	"snoise"		%read{26,1146} %write{2147483647,-1}
temp	int	$tmp9	%read{22,38} %write{22,38}
temp	float	$tmp10	%read{22,38} %write{22,38}
temp	float	$tmp11	%read{22,38} %write{22,38}
const	int	$const12	1		%read{38,1139} %write{2147483647,-1}
temp	int	$tmp12	%read{2147483647,-1} %write{22,38}
temp	float	$tmp13	%read{40,40} %write{39,39}
temp	int	$tmp14	%read{42,42} %write{41,41}
temp	float	$tmp15	%read{51,51} %write{43,43}
temp	float	$tmp16	%read{51,51} %write{48,50}
temp	int	$tmp17	%read{47,47} %write{46,46}
temp	float	$tmp18	%read{52,52} %write{51,51}
temp	float	$tmp19	%read{53,53} %write{52,52}
const	string	$const13	"fBM"		%read{55,879} %write{2147483647,-1}
temp	int	$tmp20	%read{56,56} %write{55,55}
const	string	$const14	"noise_musgrave_fBm_1d"		%read{57,57} %write{2147483647,-1}
temp	float	$tmp21	%read{62,62} %write{61,61}
temp	int	$tmp22	%read{65,80} %write{65,80}
temp	int	$tmp23	%read{65,80} %write{65,80}
temp	int	$tmp24	%read{63,80} %write{64,80}
temp	float	$tmp25	%read{65,80} %write{65,80}
temp	int	$tmp26	%read{65,80} %write{65,80}
temp	float	$tmp27	%read{65,80} %write{65,80}
temp	int	$tmp28	%read{2147483647,-1} %write{65,80}
temp	float	$tmp29	%read{82,82} %write{81,81}
temp	int	$tmp30	%read{84,84} %write{83,83}
temp	float	$tmp31	%read{92,92} %write{89,91}
temp	int	$tmp32	%read{88,88} %write{87,87}
temp	float	$tmp33	%read{93,93} %write{92,92}
temp	float	$tmp34	%read{94,94} %write{93,93}
const	string	$const15	"hybrid_multifractal"		%read{96,934} %write{2147483647,-1}
temp	int	$tmp35	%read{97,97} %write{96,96}
const	string	$const16	"noise_musgrave_hybrid_multi_fractal_1d"		%read{98,98} %write{2147483647,-1}
temp	float	$tmp36	%read{101,101} %write{100,100}
temp	float	$tmp37	%read{110,110} %write{107,109}
temp	int	$tmp38	%read{106,106} %write{105,105}
const	float	$const17	0.00100000005		%read{115,966} %write{2147483647,-1}
temp	int	$tmp39	%read{115,142} %write{115,142}
temp	int	$tmp40	%read{115,142} %write{115,142}
temp	int	$tmp41	%read{115,142} %write{115,142}
temp	int	$tmp42	%read{115,142} %write{115,142}
temp	int	$tmp43	%read{115,142} %write{115,142}
temp	int	$tmp44	%read{113,142} %write{114,142}
temp	int	$tmp45	%read{115,142} %write{115,142}
temp	float	$tmp46	%read{115,142} %write{115,142}
temp	int	$tmp47	%read{115,142} %write{115,142}
temp	float	$tmp48	%read{115,142} %write{115,142}
temp	float	$tmp49	%read{115,142} %write{115,142}
temp	float	$tmp50	%read{115,142} %write{115,142}
temp	int	$tmp51	%read{2147483647,-1} %write{115,142}
temp	float	$tmp52	%read{144,144} %write{143,143}
temp	int	$tmp53	%read{146,146} %write{145,145}
temp	float	$tmp54	%read{154,154} %write{151,153}
temp	int	$tmp55	%read{150,150} %write{149,149}
temp	float	$tmp56	%read{155,155} %write{154,154}
temp	float	$tmp57	%read{156,156} %write{155,155}
temp	float	$tmp58	%read{157,157} %write{156,156}
const	string	$const18	"ridged_multifractal"		%read{159,1021} %write{2147483647,-1}
temp	int	$tmp59	%read{160,160} %write{159,159}
const	string	$const19	"noise_musgrave_ridged_multi_fractal_1d"		%read{161,161} %write{2147483647,-1}
temp	float	$tmp60	%read{164,164} %write{163,163}
temp	float	$tmp61	%read{174,174} %write{173,173}
temp	float	$tmp62	%read{173,173} %write{170,172}
temp	int	$tmp63	%read{169,169} %write{168,168}
temp	int	$tmp64	%read{180,203} %write{180,203}
temp	int	$tmp65	%read{180,203} %write{180,203}
temp	int	$tmp66	%read{178,203} %write{179,203}
temp	float	$tmp67	%read{180,203} %write{180,203}
temp	float	$tmp68	%read{180,203} %write{180,203}
temp	float	$tmp69	%read{180,203} %write{180,203}
temp	float	$tmp70	%read{180,203} %write{180,203}
temp	int	$tmp71	%read{180,203} %write{180,203}
temp	float	$tmp72	%read{180,203} %write{180,203}
temp	int	$tmp73	%read{2147483647,-1} %write{180,203}
const	string	$const20	"hetero_terrain"		%read{205,1081} %write{2147483647,-1}
temp	int	$tmp74	%read{206,206} %write{205,205}
const	string	$const21	"noise_musgrave_hetero_terrain_1d"		%read{207,207} %write{2147483647,-1}
temp	float	$tmp75	%read{210,210} %write{209,209}
temp	float	$tmp76	%read{219,219} %write{216,218}
temp	int	$tmp77	%read{215,215} %write{214,214}
temp	int	$tmp78	%read{223,240} %write{223,240}
temp	int	$tmp79	%read{223,240} %write{223,240}
temp	int	$tmp80	%read{221,240} %write{222,240}
temp	float	$tmp81	%read{223,240} %write{223,240}
temp	int	$tmp82	%read{223,240} %write{223,240}
temp	float	$tmp83	%read{223,240} %write{223,240}
temp	float	$tmp84	%read{223,240} %write{223,240}
temp	int	$tmp85	%read{2147483647,-1} %write{223,240}
temp	float	$tmp86	%read{242,242} %write{241,241}
temp	int	$tmp87	%read{244,244} %write{243,243}
temp	float	$tmp88	%read{252,252} %write{249,251}
temp	int	$tmp89	%read{248,248} %write{247,247}
temp	float	$tmp90	%read{253,253} %write{252,252}
temp	float	$tmp91	%read{254,254} %write{253,253}
temp	float	$tmp92	%read{256,256} %write{255,255}
const	string	$const22	"2D"		%read{259,259} %write{2147483647,-1}
temp	int	$tmp93	%read{260,260} %write{259,259}
temp	float	$tmp94.x	%read{267,267} %write{261,261}
temp	float	$tmp94.y	%read{268,268} %write{262,262}
const	string	$const23	"__operator__mul__"		%read{263,1133} %write{2147483647,-1}
temp	float	$tmp95.x	%read{267,267} %write{264,264}
temp	float	$tmp95.y	%read{268,268} %write{265,265}
temp	int	$tmp96	%read{270,270} %write{269,269}
const	string	$const24	"noise_musgrave_multi_fractal_2d"		%read{271,271} %write{2147483647,-1}
temp	float	$tmp97	%read{277,277} %write{276,276}
temp	int	$tmp98	%read{280,301} %write{280,301}
temp	int	$tmp99	%read{280,301} %write{280,301}
temp	int	$tmp100	%read{278,301} %write{279,301}
temp	float	$tmp101	%read{280,301} %write{280,301}
temp	int	$tmp102	%read{280,301} %write{280,301}
temp	float	$tmp103	%read{280,301} %write{280,301}
temp	float	$tmp104	%read{280,301} %write{280,301}
temp	float	$tmp105.x	%read{280,301} %write{280,301}
temp	float	$tmp105.y	%read{280,301} %write{280,301}
temp	int	$tmp106	%read{2147483647,-1} %write{280,301}
temp	float	$tmp107	%read{303,303} %write{302,302}
temp	int	$tmp108	%read{305,305} %write{304,304}
temp	float	$tmp109	%read{314,314} %write{306,306}
temp	float	$tmp110	%read{314,314} %write{311,313}
temp	int	$tmp111	%read{310,310} %write{309,309}
temp	float	$tmp112	%read{315,315} %write{314,314}
temp	float	$tmp113	%read{316,316} %write{315,315}
temp	int	$tmp114	%read{319,319} %write{318,318}
const	string	$const25	"noise_musgrave_fBm_2d"		%read{320,320} %write{2147483647,-1}
temp	float	$tmp115	%read{326,326} %write{325,325}
temp	int	$tmp116	%read{329,349} %write{329,349}
temp	int	$tmp117	%read{329,349} %write{329,349}
temp	int	$tmp118	%read{327,349} %write{328,349}
temp	float	$tmp119	%read{329,349} %write{329,349}
temp	int	$tmp120	%read{329,349} %write{329,349}
temp	float	$tmp121	%read{329,349} %write{329,349}
temp	float	$tmp122.x	%read{329,349} %write{329,349}
temp	float	$tmp122.y	%read{329,349} %write{329,349}
temp	int	$tmp123	%read{2147483647,-1} %write{329,349}
temp	float	$tmp124	%read{351,351} %write{350,350}
temp	int	$tmp125	%read{353,353} %write{352,352}
temp	float	$tmp126	%read{361,361} %write{358,360}
temp	int	$tmp127	%read{357,357} %write{356,356}
temp	float	$tmp128	%read{362,362} %write{361,361}
temp	float	$tmp129	%read{363,363} %write{362,362}
temp	int	$tmp130	%read{366,366} %write{365,365}
const	string	$const26	"noise_musgrave_hybrid_multi_fractal_2d"		%read{367,367} %write{2147483647,-1}
temp	float	$tmp131	%read{371,371} %write{370,370}
temp	float	$tmp132	%read{380,380} %write{377,379}
temp	int	$tmp133	%read{376,376} %write{375,375}
temp	float	$tmp134.x	%read{386,386} %write{383,383}
temp	float	$tmp134.y	%read{387,387} %write{384,384}
temp	int	$tmp135	%read{390,422} %write{390,422}
temp	int	$tmp136	%read{390,422} %write{390,422}
temp	int	$tmp137	%read{390,422} %write{390,422}
temp	int	$tmp138	%read{390,422} %write{390,422}
temp	int	$tmp139	%read{390,422} %write{390,422}
temp	int	$tmp140	%read{388,422} %write{389,422}
temp	int	$tmp141	%read{390,422} %write{390,422}
temp	float	$tmp142	%read{390,422} %write{390,422}
temp	int	$tmp143	%read{390,422} %write{390,422}
temp	float	$tmp144	%read{390,422} %write{390,422}
temp	float	$tmp145	%read{390,422} %write{390,422}
temp	float	$tmp146	%read{390,422} %write{390,422}
temp	float	$tmp147.x	%read{390,422} %write{390,422}
temp	float	$tmp147.y	%read{390,422} %write{390,422}
temp	int	$tmp148	%read{2147483647,-1} %write{390,422}
temp	float	$tmp149	%read{424,424} %write{423,423}
temp	int	$tmp150	%read{426,426} %write{425,425}
temp	float	$tmp151	%read{434,434} %write{431,433}
temp	int	$tmp152	%read{430,430} %write{429,429}
temp	float	$tmp153	%read{435,435} %write{434,434}
temp	float	$tmp154	%read{436,436} %write{435,435}
temp	float	$tmp155	%read{437,437} %write{436,436}
temp	int	$tmp156	%read{440,440} %write{439,439}
const	string	$const27	"noise_musgrave_ridged_multi_fractal_2d"		%read{441,441} %write{2147483647,-1}
temp	float	$tmp157	%read{445,445} %write{444,444}
temp	float	$tmp158	%read{455,455} %write{454,454}
temp	float	$tmp159	%read{454,454} %write{451,453}
temp	int	$tmp160	%read{450,450} %write{449,449}
temp	int	$tmp161	%read{461,489} %write{461,489}
temp	int	$tmp162	%read{461,489} %write{461,489}
temp	int	$tmp163	%read{459,489} %write{460,489}
temp	float	$tmp164.x	%read{461,489} %write{461,489}
temp	float	$tmp164.y	%read{461,489} %write{461,489}
temp	float	$tmp165	%read{461,489} %write{461,489}
temp	float	$tmp166	%read{461,489} %write{461,489}
temp	float	$tmp167	%read{461,489} %write{461,489}
temp	float	$tmp168	%read{461,489} %write{461,489}
temp	int	$tmp169	%read{461,489} %write{461,489}
temp	float	$tmp170	%read{461,489} %write{461,489}
temp	int	$tmp171	%read{2147483647,-1} %write{461,489}
temp	int	$tmp172	%read{492,492} %write{491,491}
const	string	$const28	"noise_musgrave_hetero_terrain_2d"		%read{493,493} %write{2147483647,-1}
temp	float	$tmp173	%read{497,497} %write{496,496}
temp	float	$tmp174	%read{506,506} %write{503,505}
temp	int	$tmp175	%read{502,502} %write{501,501}
temp	float	$tmp176.x	%read{511,511} %write{508,508}
temp	float	$tmp176.y	%read{512,512} %write{509,509}
temp	int	$tmp177	%read{515,537} %write{515,537}
temp	int	$tmp178	%read{515,537} %write{515,537}
temp	int	$tmp179	%read{513,537} %write{514,537}
temp	float	$tmp180	%read{515,537} %write{515,537}
temp	int	$tmp181	%read{515,537} %write{515,537}
temp	float	$tmp182	%read{515,537} %write{515,537}
temp	float	$tmp183	%read{515,537} %write{515,537}
temp	float	$tmp184.x	%read{515,537} %write{515,537}
temp	float	$tmp184.y	%read{515,537} %write{515,537}
temp	int	$tmp185	%read{2147483647,-1} %write{515,537}
temp	float	$tmp186	%read{539,539} %write{538,538}
temp	int	$tmp187	%read{541,541} %write{540,540}
temp	float	$tmp188	%read{549,549} %write{546,548}
temp	int	$tmp189	%read{545,545} %write{544,544}
temp	float	$tmp190	%read{550,550} %write{549,549}
temp	float	$tmp191	%read{551,551} %write{550,550}
temp	float	$tmp192	%read{553,553} %write{552,552}
const	string	$const29	"3D"		%read{556,556} %write{2147483647,-1}
temp	int	$tmp193	%read{557,557} %write{556,556}
temp	int	$tmp194	%read{560,560} %write{559,559}
const	string	$const30	"noise_musgrave_multi_fractal_3d"		%read{561,561} %write{2147483647,-1}
temp	float	$tmp195	%read{566,566} %write{565,565}
temp	int	$tmp196	%read{569,585} %write{569,585}
temp	int	$tmp197	%read{569,585} %write{569,585}
temp	int	$tmp198	%read{567,585} %write{568,585}
temp	float	$tmp199	%read{569,585} %write{569,585}
temp	int	$tmp200	%read{569,585} %write{569,585}
temp	float	$tmp201	%read{569,585} %write{569,585}
temp	float	$tmp202	%read{569,585} %write{569,585}
temp	int	$tmp203	%read{2147483647,-1} %write{569,585}
temp	float	$tmp204	%read{587,587} %write{586,586}
temp	int	$tmp205	%read{589,589} %write{588,588}
temp	float	$tmp206	%read{598,598} %write{590,590}
temp	float	$tmp207	%read{598,598} %write{595,597}
temp	int	$tmp208	%read{594,594} %write{593,593}
temp	float	$tmp209	%read{599,599} %write{598,598}
temp	float	$tmp210	%read{600,600} %write{599,599}
temp	int	$tmp211	%read{603,603} %write{602,602}
const	string	$const31	"noise_musgrave_fBm_3d"		%read{604,604} %write{2147483647,-1}
temp	float	$tmp212	%read{609,609} %write{608,608}
temp	int	$tmp213	%read{612,627} %write{612,627}
temp	int	$tmp214	%read{612,627} %write{612,627}
temp	int	$tmp215	%read{610,627} %write{611,627}
temp	float	$tmp216	%read{612,627} %write{612,627}
temp	int	$tmp217	%read{612,627} %write{612,627}
temp	float	$tmp218	%read{612,627} %write{612,627}
temp	int	$tmp219	%read{2147483647,-1} %write{612,627}
temp	float	$tmp220	%read{629,629} %write{628,628}
temp	int	$tmp221	%read{631,631} %write{630,630}
temp	float	$tmp222	%read{639,639} %write{636,638}
temp	int	$tmp223	%read{635,635} %write{634,634}
temp	float	$tmp224	%read{640,640} %write{639,639}
temp	float	$tmp225	%read{641,641} %write{640,640}
temp	int	$tmp226	%read{644,644} %write{643,643}
const	string	$const32	"noise_musgrave_hybrid_multi_fractal_3d"		%read{645,645} %write{2147483647,-1}
temp	float	$tmp227	%read{648,648} %write{647,647}
temp	float	$tmp228	%read{657,657} %write{654,656}
temp	int	$tmp229	%read{653,653} %write{652,652}
temp	int	$tmp230	%read{662,689} %write{662,689}
temp	int	$tmp231	%read{662,689} %write{662,689}
temp	int	$tmp232	%read{662,689} %write{662,689}
temp	int	$tmp233	%read{662,689} %write{662,689}
temp	int	$tmp234	%read{662,689} %write{662,689}
temp	int	$tmp235	%read{660,689} %write{661,689}
temp	int	$tmp236	%read{662,689} %write{662,689}
temp	float	$tmp237	%read{662,689} %write{662,689}
temp	int	$tmp238	%read{662,689} %write{662,689}
temp	float	$tmp239	%read{662,689} %write{662,689}
temp	float	$tmp240	%read{662,689} %write{662,689}
temp	float	$tmp241	%read{662,689} %write{662,689}
temp	int	$tmp242	%read{2147483647,-1} %write{662,689}
temp	float	$tmp243	%read{691,691} %write{690,690}
temp	int	$tmp244	%read{693,693} %write{692,692}
temp	float	$tmp245	%read{701,701} %write{698,700}
temp	int	$tmp246	%read{697,697} %write{696,696}
temp	float	$tmp247	%read{702,702} %write{701,701}
temp	float	$tmp248	%read{703,703} %write{702,702}
temp	float	$tmp249	%read{704,704} %write{703,703}
temp	int	$tmp250	%read{707,707} %write{706,706}
const	string	$const33	"noise_musgrave_ridged_multi_fractal_3d"		%read{708,708} %write{2147483647,-1}
temp	float	$tmp251	%read{711,711} %write{710,710}
temp	float	$tmp252	%read{721,721} %write{720,720}
temp	float	$tmp253	%read{720,720} %write{717,719}
temp	int	$tmp254	%read{716,716} %write{715,715}
temp	int	$tmp255	%read{727,750} %write{727,750}
temp	int	$tmp256	%read{727,750} %write{727,750}
temp	int	$tmp257	%read{725,750} %write{726,750}
temp	float	$tmp258	%read{727,750} %write{727,750}
temp	float	$tmp259	%read{727,750} %write{727,750}
temp	float	$tmp260	%read{727,750} %write{727,750}
temp	float	$tmp261	%read{727,750} %write{727,750}
temp	int	$tmp262	%read{727,750} %write{727,750}
temp	float	$tmp263	%read{727,750} %write{727,750}
temp	int	$tmp264	%read{2147483647,-1} %write{727,750}
temp	int	$tmp265	%read{753,753} %write{752,752}
const	string	$const34	"noise_musgrave_hetero_terrain_3d"		%read{754,754} %write{2147483647,-1}
temp	float	$tmp266	%read{757,757} %write{756,756}
temp	float	$tmp267	%read{766,766} %write{763,765}
temp	int	$tmp268	%read{762,762} %write{761,761}
temp	int	$tmp269	%read{770,787} %write{770,787}
temp	int	$tmp270	%read{770,787} %write{770,787}
temp	int	$tmp271	%read{768,787} %write{769,787}
temp	float	$tmp272	%read{770,787} %write{770,787}
temp	int	$tmp273	%read{770,787} %write{770,787}
temp	float	$tmp274	%read{770,787} %write{770,787}
temp	float	$tmp275	%read{770,787} %write{770,787}
temp	int	$tmp276	%read{2147483647,-1} %write{770,787}
temp	float	$tmp277	%read{789,789} %write{788,788}
temp	int	$tmp278	%read{791,791} %write{790,790}
temp	float	$tmp279	%read{799,799} %write{796,798}
temp	int	$tmp280	%read{795,795} %write{794,794}
temp	float	$tmp281	%read{800,800} %write{799,799}
temp	float	$tmp282	%read{801,801} %write{800,800}
temp	float	$tmp283	%read{803,803} %write{802,802}
const	string	$const35	"4D"		%read{806,806} %write{2147483647,-1}
temp	int	$tmp284	%read{807,807} %write{806,806}
temp	float	$tmp285.x	%read{818,818} %write{808,808}
temp	float	$tmp285.y	%read{819,819} %write{809,809}
temp	float	$tmp285.z	%read{820,820} %write{810,810}
temp	float	$tmp285.w	%read{821,821} %write{811,811}
const	int	$const36	2		%read{810,810} %write{2147483647,-1}
temp	float	$tmp286.x	%read{818,818} %write{813,813}
temp	float	$tmp286.y	%read{819,819} %write{814,814}
temp	float	$tmp286.z	%read{820,820} %write{815,815}
temp	float	$tmp286.w	%read{821,821} %write{816,816}
temp	int	$tmp287	%read{823,823} %write{822,822}
const	string	$const37	"noise_musgrave_multi_fractal_4d"		%read{824,824} %write{2147483647,-1}
temp	float	$tmp288	%read{832,832} %write{831,831}
temp	int	$tmp289	%read{835,861} %write{835,861}
temp	int	$tmp290	%read{835,861} %write{835,861}
temp	int	$tmp291	%read{833,861} %write{834,861}
temp	float	$tmp292	%read{835,861} %write{835,861}
temp	point	$tmp293	%read{835,861} %write{835,861}
temp	int	$tmp294	%read{835,861} %write{835,861}
temp	float	$tmp295	%read{835,861} %write{835,861}
temp	float	$tmp296	%read{835,861} %write{835,861}
temp	float	$tmp297.x	%read{835,861} %write{835,861}
temp	float	$tmp297.y	%read{835,861} %write{835,861}
temp	float	$tmp297.z	%read{835,861} %write{835,861}
temp	float	$tmp297.w	%read{835,861} %write{835,861}
temp	int	$tmp298	%read{2147483647,-1} %write{835,861}
temp	float	$tmp299	%read{863,863} %write{862,862}
temp	int	$tmp300	%read{865,865} %write{864,864}
temp	float	$tmp301	%read{875,875} %write{866,866}
temp	float	$tmp302	%read{875,875} %write{872,874}
temp	point	$tmp303	%read{869,869} %write{868,868}
temp	int	$tmp304	%read{871,871} %write{870,870}
temp	float	$tmp305	%read{876,876} %write{875,875}
temp	float	$tmp306	%read{877,877} %write{876,876}
temp	int	$tmp307	%read{880,880} %write{879,879}
const	string	$const38	"noise_musgrave_fBm_4d"		%read{881,881} %write{2147483647,-1}
temp	float	$tmp308	%read{889,889} %write{888,888}
temp	int	$tmp309	%read{892,917} %write{892,917}
temp	int	$tmp310	%read{892,917} %write{892,917}
temp	int	$tmp311	%read{890,917} %write{891,917}
temp	float	$tmp312	%read{892,917} %write{892,917}
temp	point	$tmp313	%read{892,917} %write{892,917}
temp	int	$tmp314	%read{892,917} %write{892,917}
temp	float	$tmp315	%read{892,917} %write{892,917}
temp	float	$tmp316.x	%read{892,917} %write{892,917}
temp	float	$tmp316.y	%read{892,917} %write{892,917}
temp	float	$tmp316.z	%read{892,917} %write{892,917}
temp	float	$tmp316.w	%read{892,917} %write{892,917}
temp	int	$tmp317	%read{2147483647,-1} %write{892,917}
temp	float	$tmp318	%read{919,919} %write{918,918}
temp	int	$tmp319	%read{921,921} %write{920,920}
temp	float	$tmp320	%read{930,930} %write{927,929}
temp	point	$tmp321	%read{924,924} %write{923,923}
temp	int	$tmp322	%read{926,926} %write{925,925}
temp	float	$tmp323	%read{931,931} %write{930,930}
temp	float	$tmp324	%read{932,932} %write{931,931}
temp	int	$tmp325	%read{935,935} %write{934,934}
const	string	$const39	"noise_musgrave_hybrid_multi_fractal_4d"		%read{936,936} %write{2147483647,-1}
temp	float	$tmp326	%read{942,942} %write{941,941}
temp	float	$tmp327	%read{952,952} %write{949,951}
temp	point	$tmp328	%read{946,946} %write{945,945}
temp	int	$tmp329	%read{948,948} %write{947,947}
temp	float	$tmp330.x	%read{960,960} %write{955,955}
temp	float	$tmp330.y	%read{961,961} %write{956,956}
temp	float	$tmp330.z	%read{962,962} %write{957,957}
temp	float	$tmp330.w	%read{963,963} %write{958,958}
temp	int	$tmp331	%read{966,1003} %write{966,1003}
temp	int	$tmp332	%read{966,1003} %write{966,1003}
temp	int	$tmp333	%read{966,1003} %write{966,1003}
temp	int	$tmp334	%read{966,1003} %write{966,1003}
temp	int	$tmp335	%read{966,1003} %write{966,1003}
temp	int	$tmp336	%read{964,1003} %write{965,1003}
temp	int	$tmp337	%read{966,1003} %write{966,1003}
temp	float	$tmp338	%read{966,1003} %write{966,1003}
temp	point	$tmp339	%read{966,1003} %write{966,1003}
temp	int	$tmp340	%read{966,1003} %write{966,1003}
temp	float	$tmp341	%read{966,1003} %write{966,1003}
temp	float	$tmp342	%read{966,1003} %write{966,1003}
temp	float	$tmp343	%read{966,1003} %write{966,1003}
temp	float	$tmp344.x	%read{966,1003} %write{966,1003}
temp	float	$tmp344.y	%read{966,1003} %write{966,1003}
temp	float	$tmp344.z	%read{966,1003} %write{966,1003}
temp	float	$tmp344.w	%read{966,1003} %write{966,1003}
temp	int	$tmp345	%read{2147483647,-1} %write{966,1003}
temp	float	$tmp346	%read{1005,1005} %write{1004,1004}
temp	int	$tmp347	%read{1007,1007} %write{1006,1006}
temp	float	$tmp348	%read{1016,1016} %write{1013,1015}
temp	point	$tmp349	%read{1010,1010} %write{1009,1009}
temp	int	$tmp350	%read{1012,1012} %write{1011,1011}
temp	float	$tmp351	%read{1017,1017} %write{1016,1016}
temp	float	$tmp352	%read{1018,1018} %write{1017,1017}
temp	float	$tmp353	%read{1019,1019} %write{1018,1018}
temp	int	$tmp354	%read{1022,1022} %write{1021,1021}
const	string	$const40	"noise_musgrave_ridged_multi_fractal_4d"		%read{1023,1023} %write{2147483647,-1}
temp	float	$tmp355	%read{1029,1029} %write{1028,1028}
temp	float	$tmp356	%read{1040,1040} %write{1039,1039}
temp	float	$tmp357	%read{1039,1039} %write{1036,1038}
temp	point	$tmp358	%read{1033,1033} %write{1032,1032}
temp	int	$tmp359	%read{1035,1035} %write{1034,1034}
temp	int	$tmp360	%read{1046,1079} %write{1046,1079}
temp	int	$tmp361	%read{1046,1079} %write{1046,1079}
temp	int	$tmp362	%read{1044,1079} %write{1045,1079}
temp	float	$tmp363.x	%read{1046,1079} %write{1046,1079}
temp	float	$tmp363.y	%read{1046,1079} %write{1046,1079}
temp	float	$tmp363.z	%read{1046,1079} %write{1046,1079}
temp	float	$tmp363.w	%read{1046,1079} %write{1046,1079}
temp	float	$tmp364	%read{1046,1079} %write{1046,1079}
temp	float	$tmp365	%read{1046,1079} %write{1046,1079}
temp	float	$tmp366	%read{1046,1079} %write{1046,1079}
temp	float	$tmp367	%read{1046,1079} %write{1046,1079}
temp	point	$tmp368	%read{1046,1079} %write{1046,1079}
temp	int	$tmp369	%read{1046,1079} %write{1046,1079}
temp	float	$tmp370	%read{1046,1079} %write{1046,1079}
temp	int	$tmp371	%read{2147483647,-1} %write{1046,1079}
temp	int	$tmp372	%read{1082,1082} %write{1081,1081}
const	string	$const41	"noise_musgrave_hetero_terrain_4d"		%read{1083,1083} %write{2147483647,-1}
temp	float	$tmp373	%read{1089,1089} %write{1088,1088}
temp	float	$tmp374	%read{1099,1099} %write{1096,1098}
temp	point	$tmp375	%read{1093,1093} %write{1092,1092}
temp	int	$tmp376	%read{1095,1095} %write{1094,1094}
temp	float	$tmp377.x	%read{1106,1106} %write{1101,1101}
temp	float	$tmp377.y	%read{1107,1107} %write{1102,1102}
temp	float	$tmp377.z	%read{1108,1108} %write{1103,1103}
temp	float	$tmp377.w	%read{1109,1109} %write{1104,1104}
temp	int	$tmp378	%read{1112,1139} %write{1112,1139}
temp	int	$tmp379	%read{1112,1139} %write{1112,1139}
temp	int	$tmp380	%read{1110,1139} %write{1111,1139}
temp	float	$tmp381	%read{1112,1139} %write{1112,1139}
temp	point	$tmp382	%read{1112,1139} %write{1112,1139}
temp	int	$tmp383	%read{1112,1139} %write{1112,1139}
temp	float	$tmp384	%read{1112,1139} %write{1112,1139}
temp	float	$tmp385	%read{1112,1139} %write{1112,1139}
temp	float	$tmp386.x	%read{1112,1139} %write{1112,1139}
temp	float	$tmp386.y	%read{1112,1139} %write{1112,1139}
temp	float	$tmp386.z	%read{1112,1139} %write{1112,1139}
temp	float	$tmp386.w	%read{1112,1139} %write{1112,1139}
temp	int	$tmp387	%read{2147483647,-1} %write{1112,1139}
temp	float	$tmp388	%read{1141,1141} %write{1140,1140}
temp	int	$tmp389	%read{1143,1143} %write{1142,1142}
temp	float	$tmp390	%read{1152,1152} %write{1149,1151}
temp	point	$tmp391	%read{1146,1146} %write{1145,1145}
temp	int	$tmp392	%read{1148,1148} %write{1147,1147}
temp	float	$tmp393	%read{1153,1153} %write{1152,1152}
temp	float	$tmp394	%read{1154,1154} %write{1153,1153}
temp	float	$tmp395	%read{1156,1156} %write{1155,1155}
code Vector
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:689
#     point Vector = P,
	assign		Vector P 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{689} %argrw{"wr"}
code ___main___
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:699
#   float dimension = max(Dimension, 1e-5);
	max		dimension Dimension $const1 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{699} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:700
#   float octaves = clamp(Detail, 0.0, 16.0);
	functioncall	$const4 5 	%line{700} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\stdosl.h:163
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1 Detail $const3 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\stdosl.h"} %line{163} %argrw{"wrr"}
	max		octaves $tmp1 $const2 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:701
#   float lacunarity = max(Lacunarity, 1e-5);
	max		lacunarity Lacunarity $const1 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{701} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:703
#   vector3 s = Vector;
	assign		s Vector 	%line{703} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:705
#   if (use_mapping)
	if		use_mapping 9 9 	%line{705} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:706
#     s = transform(mapping, s);
	transform	s mapping s 	%line{706} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:708
#   if (dimensions == "1D") {
	eq		$tmp2 dimensions $const5 	%line{708} %argrw{"wrr"}
	if		$tmp2 259 1160 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:709
#     float p = W * Scale;
	mul		___582_p W Scale 	%line{709} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:710
#     if (type == "multifractal") {
	eq		$tmp3 type $const6 	%line{710} %argrw{"wrr"}
	if		$tmp3 55 259 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:711
#       Fac = noise_musgrave_multi_fractal_1d(p, dimension, lacunarity, octaves);
	functioncall	$const7 55 	%line{711} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:63
#   float p = co;
	assign		___506_p ___582_p 	%line{63} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:64
#   float value = 1.0;
	assign		___506_value $const8 	%line{64} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:65
#   float pwr = 1.0;
	assign		___506_pwr $const8 	%line{65} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:66
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp4 dimension 	%line{66} %argrw{"wr"}
	pow		___506_pwHL lacunarity $tmp4 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:68
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp7 22 25 37 39 	%line{68} %argrw{"r"}
	assign		___507_i $const9 	%argrw{"wr"}
	assign		$tmp5 octaves 	%argrw{"wr"}
	lt		$tmp6 ___507_i $tmp5 	%argrw{"wrr"}
	neq		$tmp7 $tmp6 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:69
#     value *= (pwr * safe_snoise(p) + 1.0);
	functioncall	$const10 32 	%line{69} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:56
#   float f = noise("snoise", p);
	noise		___440_f $const11 ___506_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{56} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:57
#   if (isinf(f))
	isinf		$tmp9 ___440_f 	%line{57} %argrw{"wr"}
	if		$tmp9 31 31 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:58
#     return 0.0;
	assign		$tmp8 $const2 	%line{58} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:59
#   return f;
	assign		$tmp8 ___440_f 	%line{59} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:69
#     value *= (pwr * safe_snoise(p) + 1.0);
	mul		$tmp10 ___506_pwr $tmp8 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{69} %argrw{"wrr"}
	add		$tmp11 $tmp10 $const8 	%argrw{"wrr"}
	mul		___506_value ___506_value $tmp11 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:70
#     pwr *= pwHL;
	mul		___506_pwr ___506_pwr ___506_pwHL 	%line{70} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:71
#     p *= lacunarity;
	mul		___506_p ___506_p lacunarity 	%line{71} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:68
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp12 ___507_i 	%line{68} %argrw{"wr"}
	add		___507_i ___507_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:74
#   float rmd = octaves - floor(octaves);
	floor		$tmp13 octaves 	%line{74} %argrw{"wr"}
	sub		___506_rmd octaves $tmp13 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:75
#   if (rmd != 0.0) {
	neq		$tmp14 ___506_rmd $const2 	%line{75} %argrw{"wrr"}
	if		$tmp14 54 54 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:76
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp15 ___506_rmd ___506_pwr 	%line{76} %argrw{"wrr"}
	functioncall	$const10 51 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:56
#   float f = noise("snoise", p);
	noise		___440_f $const11 ___506_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{56} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:57
#   if (isinf(f))
	isinf		$tmp17 ___440_f 	%line{57} %argrw{"wr"}
	if		$tmp17 50 50 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:58
#     return 0.0;
	assign		$tmp16 $const2 	%line{58} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:59
#   return f;
	assign		$tmp16 ___440_f 	%line{59} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:76
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp18 $tmp15 $tmp16 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{76} %argrw{"wrr"}
	add		$tmp19 $tmp18 $const8 	%argrw{"wrr"}
	mul		___506_value ___506_value $tmp19 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:79
#   return value;
	assign		Fac ___506_value 	%line{79} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:713
#     else if (type == "fBM") {
	eq		$tmp20 type $const13 	%line{713} %argrw{"wrr"}
	if		$tmp20 96 259 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:714
#       Fac = noise_musgrave_fBm_1d(p, dimension, lacunarity, octaves);
	functioncall	$const14 96 	%line{714} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:35
#   float p = co;
	assign		___502_p ___582_p 	%line{35} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:36
#   float value = 0.0;
	assign		___502_value $const2 	%line{36} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:37
#   float pwr = 1.0;
	assign		___502_pwr $const8 	%line{37} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:38
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp21 dimension 	%line{38} %argrw{"wr"}
	pow		___502_pwHL lacunarity $tmp21 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:40
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp24 65 68 79 81 	%line{40} %argrw{"r"}
	assign		___503_i $const9 	%argrw{"wr"}
	assign		$tmp22 octaves 	%argrw{"wr"}
	lt		$tmp23 ___503_i $tmp22 	%argrw{"wrr"}
	neq		$tmp24 $tmp23 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:41
#     value += safe_snoise(p) * pwr;
	functioncall	$const10 75 	%line{41} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:56
#   float f = noise("snoise", p);
	noise		___440_f $const11 ___502_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{56} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:57
#   if (isinf(f))
	isinf		$tmp26 ___440_f 	%line{57} %argrw{"wr"}
	if		$tmp26 74 74 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:58
#     return 0.0;
	assign		$tmp25 $const2 	%line{58} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:59
#   return f;
	assign		$tmp25 ___440_f 	%line{59} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:41
#     value += safe_snoise(p) * pwr;
	mul		$tmp27 $tmp25 ___502_pwr 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{41} %argrw{"wrr"}
	add		___502_value ___502_value $tmp27 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:42
#     pwr *= pwHL;
	mul		___502_pwr ___502_pwr ___502_pwHL 	%line{42} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:43
#     p *= lacunarity;
	mul		___502_p ___502_p lacunarity 	%line{43} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:40
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp28 ___503_i 	%line{40} %argrw{"wr"}
	add		___503_i ___503_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:46
#   float rmd = octaves - floor(octaves);
	floor		$tmp29 octaves 	%line{46} %argrw{"wr"}
	sub		___502_rmd octaves $tmp29 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:47
#   if (rmd != 0.0) {
	neq		$tmp30 ___502_rmd $const2 	%line{47} %argrw{"wrr"}
	if		$tmp30 95 95 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:48
#     value += rmd * safe_snoise(p) * pwr;
	functioncall	$const10 92 	%line{48} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:56
#   float f = noise("snoise", p);
	noise		___440_f $const11 ___502_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{56} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:57
#   if (isinf(f))
	isinf		$tmp32 ___440_f 	%line{57} %argrw{"wr"}
	if		$tmp32 91 91 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:58
#     return 0.0;
	assign		$tmp31 $const2 	%line{58} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:59
#   return f;
	assign		$tmp31 ___440_f 	%line{59} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:48
#     value += rmd * safe_snoise(p) * pwr;
	mul		$tmp33 ___502_rmd $tmp31 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{48} %argrw{"wrr"}
	mul		$tmp34 $tmp33 ___502_pwr 	%argrw{"wrr"}
	add		___502_value ___502_value $tmp34 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:51
#   return value;
	assign		Fac ___502_value 	%line{51} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:716
#     else if (type == "hybrid_multifractal") {
	eq		$tmp35 type $const15 	%line{716} %argrw{"wrr"}
	if		$tmp35 159 259 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:717
#       Fac = noise_musgrave_hybrid_multi_fractal_1d(
	functioncall	$const16 159 	%line{717} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:128
#   float p = co;
	assign		___514_p ___582_p 	%line{128} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:129
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp36 dimension 	%line{129} %argrw{"wr"}
	pow		___514_pwHL lacunarity $tmp36 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:130
#   float pwr = pwHL;
	assign		___514_pwr ___514_pwHL 	%line{130} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:132
#   float value = safe_snoise(p) + offset;
	functioncall	$const10 110 	%line{132} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:56
#   float f = noise("snoise", p);
	noise		___440_f $const11 ___514_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{56} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:57
#   if (isinf(f))
	isinf		$tmp38 ___440_f 	%line{57} %argrw{"wr"}
	if		$tmp38 109 109 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:58
#     return 0.0;
	assign		$tmp37 $const2 	%line{58} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:59
#   return f;
	assign		$tmp37 ___440_f 	%line{59} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:132
#   float value = safe_snoise(p) + offset;
	add		___514_value $tmp37 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{132} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:133
#   float weight = gain * value;
	mul		___514_weight Gain ___514_value 	%line{133} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:134
#   p *= lacunarity;
	mul		___514_p ___514_p lacunarity 	%line{134} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:136
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	for		$tmp44 115 123 141 143 	%line{136} %argrw{"r"}
	assign		___515_i $const12 	%argrw{"wr"}
	gt		$tmp39 ___514_weight $const17 	%argrw{"wrr"}
	neq		$tmp40 $tmp39 $const9 	%argrw{"wrr"}
	if		$tmp40 122 122 	%argrw{"r"}
	assign		$tmp41 octaves 	%argrw{"wr"}
	lt		$tmp42 ___515_i $tmp41 	%argrw{"wrr"}
	neq		$tmp43 $tmp42 $const9 	%argrw{"wrr"}
	assign		$tmp40 $tmp43 	%argrw{"wr"}
	neq		$tmp44 $tmp40 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:137
#     if (weight > 1.0) {
	gt		$tmp45 ___514_weight $const8 	%line{137} %argrw{"wrr"}
	if		$tmp45 126 126 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:138
#       weight = 1.0;
	assign		___514_weight $const8 	%line{138} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:141
#     float signal = (safe_snoise(p) + offset) * pwr;
	functioncall	$const10 133 	%line{141} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:56
#   float f = noise("snoise", p);
	noise		___440_f $const11 ___514_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{56} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:57
#   if (isinf(f))
	isinf		$tmp47 ___440_f 	%line{57} %argrw{"wr"}
	if		$tmp47 132 132 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:58
#     return 0.0;
	assign		$tmp46 $const2 	%line{58} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:59
#   return f;
	assign		$tmp46 ___440_f 	%line{59} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:141
#     float signal = (safe_snoise(p) + offset) * pwr;
	add		$tmp48 $tmp46 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{141} %argrw{"wrr"}
	mul		___516_signal $tmp48 ___514_pwr 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:142
#     pwr *= pwHL;
	mul		___514_pwr ___514_pwr ___514_pwHL 	%line{142} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:143
#     value += weight * signal;
	mul		$tmp49 ___514_weight ___516_signal 	%line{143} %argrw{"wrr"}
	add		___514_value ___514_value $tmp49 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:144
#     weight *= gain * signal;
	mul		$tmp50 Gain ___516_signal 	%line{144} %argrw{"wrr"}
	mul		___514_weight ___514_weight $tmp50 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:145
#     p *= lacunarity;
	mul		___514_p ___514_p lacunarity 	%line{145} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:136
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	assign		$tmp51 ___515_i 	%line{136} %argrw{"wr"}
	add		___515_i ___515_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:148
#   float rmd = octaves - floor(octaves);
	floor		$tmp52 octaves 	%line{148} %argrw{"wr"}
	sub		___514_rmd octaves $tmp52 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:149
#   if (rmd != 0.0) {
	neq		$tmp53 ___514_rmd $const2 	%line{149} %argrw{"wrr"}
	if		$tmp53 158 158 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:150
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	functioncall	$const10 154 	%line{150} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:56
#   float f = noise("snoise", p);
	noise		___440_f $const11 ___514_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{56} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:57
#   if (isinf(f))
	isinf		$tmp55 ___440_f 	%line{57} %argrw{"wr"}
	if		$tmp55 153 153 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:58
#     return 0.0;
	assign		$tmp54 $const2 	%line{58} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:59
#   return f;
	assign		$tmp54 ___440_f 	%line{59} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:150
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	add		$tmp56 $tmp54 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{150} %argrw{"wrr"}
	mul		$tmp57 $tmp56 ___514_pwr 	%argrw{"wrr"}
	mul		$tmp58 ___514_rmd $tmp57 	%argrw{"wrr"}
	add		___514_value ___514_value $tmp58 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:153
#   return value;
	assign		Fac ___514_value 	%line{153} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:720
#     else if (type == "ridged_multifractal") {
	eq		$tmp59 type $const18 	%line{720} %argrw{"wrr"}
	if		$tmp59 205 259 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:721
#       Fac = noise_musgrave_ridged_multi_fractal_1d(
	functioncall	$const19 205 	%line{721} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:167
#   float p = co;
	assign		___519_p ___582_p 	%line{167} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:168
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp60 dimension 	%line{168} %argrw{"wr"}
	pow		___519_pwHL lacunarity $tmp60 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:169
#   float pwr = pwHL;
	assign		___519_pwr ___519_pwHL 	%line{169} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:171
#   float signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 173 	%line{171} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:56
#   float f = noise("snoise", p);
	noise		___440_f $const11 ___519_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{56} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:57
#   if (isinf(f))
	isinf		$tmp63 ___440_f 	%line{57} %argrw{"wr"}
	if		$tmp63 172 172 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:58
#     return 0.0;
	assign		$tmp62 $const2 	%line{58} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:59
#   return f;
	assign		$tmp62 ___440_f 	%line{59} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:171
#   float signal = offset - fabs(safe_snoise(p));
	fabs		$tmp61 $tmp62 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{171} %argrw{"wr"}
	sub		___519_signal Offset $tmp61 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:172
#   signal *= signal;
	mul		___519_signal ___519_signal ___519_signal 	%line{172} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:173
#   float value = signal;
	assign		___519_value ___519_signal 	%line{173} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:174
#   float weight = 1.0;
	assign		___519_weight $const8 	%line{174} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:176
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp66 180 183 202 204 	%line{176} %argrw{"r"}
	assign		___520_i $const12 	%argrw{"wr"}
	assign		$tmp64 octaves 	%argrw{"wr"}
	lt		$tmp65 ___520_i $tmp64 	%argrw{"wrr"}
	neq		$tmp66 $tmp65 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:177
#     p *= lacunarity;
	mul		___519_p ___519_p lacunarity 	%line{177} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:178
#     weight = clamp(signal * gain, 0.0, 1.0);
	mul		$tmp67 ___519_signal Gain 	%line{178} %argrw{"wrr"}
	functioncall	$const4 188 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\stdosl.h:163
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp68 $tmp67 $const8 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\stdosl.h"} %line{163} %argrw{"wrr"}
	max		___519_weight $tmp68 $const2 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:179
#     signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 195 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{179} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:56
#   float f = noise("snoise", p);
	noise		___440_f $const11 ___519_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{56} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:57
#   if (isinf(f))
	isinf		$tmp71 ___440_f 	%line{57} %argrw{"wr"}
	if		$tmp71 194 194 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:58
#     return 0.0;
	assign		$tmp70 $const2 	%line{58} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:59
#   return f;
	assign		$tmp70 ___440_f 	%line{59} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:179
#     signal = offset - fabs(safe_snoise(p));
	fabs		$tmp69 $tmp70 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{179} %argrw{"wr"}
	sub		___519_signal Offset $tmp69 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:180
#     signal *= signal;
	mul		___519_signal ___519_signal ___519_signal 	%line{180} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:181
#     signal *= weight;
	mul		___519_signal ___519_signal ___519_weight 	%line{181} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:182
#     value += signal * pwr;
	mul		$tmp72 ___519_signal ___519_pwr 	%line{182} %argrw{"wrr"}
	add		___519_value ___519_value $tmp72 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:183
#     pwr *= pwHL;
	mul		___519_pwr ___519_pwr ___519_pwHL 	%line{183} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:176
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp73 ___520_i 	%line{176} %argrw{"wr"}
	add		___520_i ___520_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:186
#   return value;
	assign		Fac ___519_value 	%line{186} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:724
#     else if (type == "hetero_terrain") {
	eq		$tmp74 type $const20 	%line{724} %argrw{"wrr"}
	if		$tmp74 258 259 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:725
#       Fac = noise_musgrave_hetero_terrain_1d(p, dimension, lacunarity, octaves, Offset);
	functioncall	$const21 258 	%line{725} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:93
#   float p = co;
	assign		___510_p ___582_p 	%line{93} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:94
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp75 dimension 	%line{94} %argrw{"wr"}
	pow		___510_pwHL lacunarity $tmp75 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:95
#   float pwr = pwHL;
	assign		___510_pwr ___510_pwHL 	%line{95} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:98
#   float value = offset + safe_snoise(p);
	functioncall	$const10 219 	%line{98} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:56
#   float f = noise("snoise", p);
	noise		___440_f $const11 ___510_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{56} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:57
#   if (isinf(f))
	isinf		$tmp77 ___440_f 	%line{57} %argrw{"wr"}
	if		$tmp77 218 218 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:58
#     return 0.0;
	assign		$tmp76 $const2 	%line{58} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:59
#   return f;
	assign		$tmp76 ___440_f 	%line{59} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:98
#   float value = offset + safe_snoise(p);
	add		___510_value Offset $tmp76 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{98} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:99
#   p *= lacunarity;
	mul		___510_p ___510_p lacunarity 	%line{99} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:101
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp80 223 226 239 241 	%line{101} %argrw{"r"}
	assign		___511_i $const12 	%argrw{"wr"}
	assign		$tmp78 octaves 	%argrw{"wr"}
	lt		$tmp79 ___511_i $tmp78 	%argrw{"wrr"}
	neq		$tmp80 $tmp79 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:102
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 233 	%line{102} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:56
#   float f = noise("snoise", p);
	noise		___440_f $const11 ___510_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{56} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:57
#   if (isinf(f))
	isinf		$tmp82 ___440_f 	%line{57} %argrw{"wr"}
	if		$tmp82 232 232 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:58
#     return 0.0;
	assign		$tmp81 $const2 	%line{58} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:59
#   return f;
	assign		$tmp81 ___440_f 	%line{59} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:102
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp83 $tmp81 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{102} %argrw{"wrr"}
	mul		$tmp84 $tmp83 ___510_pwr 	%argrw{"wrr"}
	mul		___512_increment $tmp84 ___510_value 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:103
#     value += increment;
	add		___510_value ___510_value ___512_increment 	%line{103} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:104
#     pwr *= pwHL;
	mul		___510_pwr ___510_pwr ___510_pwHL 	%line{104} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:105
#     p *= lacunarity;
	mul		___510_p ___510_p lacunarity 	%line{105} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:101
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp85 ___511_i 	%line{101} %argrw{"wr"}
	add		___511_i ___511_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:108
#   float rmd = octaves - floor(octaves);
	floor		$tmp86 octaves 	%line{108} %argrw{"wr"}
	sub		___510_rmd octaves $tmp86 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:109
#   if (rmd != 0.0) {
	neq		$tmp87 ___510_rmd $const2 	%line{109} %argrw{"wrr"}
	if		$tmp87 257 257 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:110
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 252 	%line{110} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:56
#   float f = noise("snoise", p);
	noise		___440_f $const11 ___510_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{56} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:57
#   if (isinf(f))
	isinf		$tmp89 ___440_f 	%line{57} %argrw{"wr"}
	if		$tmp89 251 251 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:58
#     return 0.0;
	assign		$tmp88 $const2 	%line{58} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:59
#   return f;
	assign		$tmp88 ___440_f 	%line{59} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:110
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp90 $tmp88 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{110} %argrw{"wrr"}
	mul		$tmp91 $tmp90 ___510_pwr 	%argrw{"wrr"}
	mul		___513_increment $tmp91 ___510_value 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:111
#     value += rmd * increment;
	mul		$tmp92 ___510_rmd ___513_increment 	%line{111} %argrw{"wrr"}
	add		___510_value ___510_value $tmp92 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:114
#   return value;
	assign		Fac ___510_value 	%line{114} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:728
#       Fac = 0.0;
	assign		Fac $const2 	%line{728} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:731
#   else if (dimensions == "2D") {
	eq		$tmp93 dimensions $const22 	%line{731} %argrw{"wrr"}
	if		$tmp93 556 1160 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:732
#     vector2 p = vector2(s[0], s[1]) * Scale;
	compref		$tmp94.x s $const9 	%line{732} %argrw{"wrr"}
	compref		$tmp94.y s $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 269 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:87
#     return a * vector2(b, b);
	assign		$tmp95.x Scale 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{87} %argrw{"wr"}
	assign		$tmp95.y Scale 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 269 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___589_p.x $tmp94.x $tmp95.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{77} %argrw{"wrr"}
	mul		___589_p.y $tmp94.y $tmp95.y 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:733
#     if (type == "multifractal") {
	eq		$tmp96 type $const6 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{733} %argrw{"wrr"}
	if		$tmp96 318 556 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:734
#       Fac = noise_musgrave_multi_fractal_2d(p, dimension, lacunarity, octaves);
	functioncall	$const24 318 	%line{734} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:228
#   vector2 p = co;
	assign		___526_p.x ___589_p.x 	%line{228} %argrw{"wr"}
	assign		___526_p.y ___589_p.y 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:229
#   float value = 1.0;
	assign		___526_value $const8 	%line{229} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:230
#   float pwr = 1.0;
	assign		___526_pwr $const8 	%line{230} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:231
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp97 dimension 	%line{231} %argrw{"wr"}
	pow		___526_pwHL lacunarity $tmp97 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:233
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp100 280 283 300 302 	%line{233} %argrw{"r"}
	assign		___527_i $const9 	%argrw{"wr"}
	assign		$tmp98 octaves 	%argrw{"wr"}
	lt		$tmp99 ___527_i $tmp98 	%argrw{"wrr"}
	neq		$tmp100 $tmp99 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:234
#     value *= (pwr * safe_snoise(p) + 1.0);
	functioncall	$const10 290 	%line{234} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:64
#   float f = noise("snoise", p.x, p.y);
	noise		___441_f $const11 ___526_p.x ___526_p.y 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{64} %argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:65
#   if (isinf(f))
	isinf		$tmp102 ___441_f 	%line{65} %argrw{"wr"}
	if		$tmp102 289 289 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:66
#     return 0.0;
	assign		$tmp101 $const2 	%line{66} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:67
#   return f;
	assign		$tmp101 ___441_f 	%line{67} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:234
#     value *= (pwr * safe_snoise(p) + 1.0);
	mul		$tmp103 ___526_pwr $tmp101 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{234} %argrw{"wrr"}
	add		$tmp104 $tmp103 $const8 	%argrw{"wrr"}
	mul		___526_value ___526_value $tmp104 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:235
#     pwr *= pwHL;
	mul		___526_pwr ___526_pwr ___526_pwHL 	%line{235} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 300 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:87
#     return a * vector2(b, b);
	assign		$tmp105.x lacunarity 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{87} %argrw{"wr"}
	assign		$tmp105.y lacunarity 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 300 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___526_p.x ___526_p.x $tmp105.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{77} %argrw{"wrr"}
	mul		___526_p.y ___526_p.y $tmp105.y 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:233
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp106 ___527_i 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{233} %argrw{"wr"}
	add		___527_i ___527_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:239
#   float rmd = octaves - floor(octaves);
	floor		$tmp107 octaves 	%line{239} %argrw{"wr"}
	sub		___526_rmd octaves $tmp107 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:240
#   if (rmd != 0.0) {
	neq		$tmp108 ___526_rmd $const2 	%line{240} %argrw{"wrr"}
	if		$tmp108 317 317 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:241
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp109 ___526_rmd ___526_pwr 	%line{241} %argrw{"wrr"}
	functioncall	$const10 314 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:64
#   float f = noise("snoise", p.x, p.y);
	noise		___441_f $const11 ___526_p.x ___526_p.y 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{64} %argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:65
#   if (isinf(f))
	isinf		$tmp111 ___441_f 	%line{65} %argrw{"wr"}
	if		$tmp111 313 313 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:66
#     return 0.0;
	assign		$tmp110 $const2 	%line{66} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:67
#   return f;
	assign		$tmp110 ___441_f 	%line{67} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:241
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp112 $tmp109 $tmp110 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{241} %argrw{"wrr"}
	add		$tmp113 $tmp112 $const8 	%argrw{"wrr"}
	mul		___526_value ___526_value $tmp113 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:244
#   return value;
	assign		Fac ___526_value 	%line{244} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:736
#     else if (type == "fBM") {
	eq		$tmp114 type $const13 	%line{736} %argrw{"wrr"}
	if		$tmp114 365 556 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:737
#       Fac = noise_musgrave_fBm_2d(p, dimension, lacunarity, octaves);
	functioncall	$const25 365 	%line{737} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:200
#   vector2 p = co;
	assign		___522_p.x ___589_p.x 	%line{200} %argrw{"wr"}
	assign		___522_p.y ___589_p.y 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:201
#   float value = 0.0;
	assign		___522_value $const2 	%line{201} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:202
#   float pwr = 1.0;
	assign		___522_pwr $const8 	%line{202} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:203
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp115 dimension 	%line{203} %argrw{"wr"}
	pow		___522_pwHL lacunarity $tmp115 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:205
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp118 329 332 348 350 	%line{205} %argrw{"r"}
	assign		___523_i $const9 	%argrw{"wr"}
	assign		$tmp116 octaves 	%argrw{"wr"}
	lt		$tmp117 ___523_i $tmp116 	%argrw{"wrr"}
	neq		$tmp118 $tmp117 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:206
#     value += safe_snoise(p) * pwr;
	functioncall	$const10 339 	%line{206} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:64
#   float f = noise("snoise", p.x, p.y);
	noise		___441_f $const11 ___522_p.x ___522_p.y 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{64} %argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:65
#   if (isinf(f))
	isinf		$tmp120 ___441_f 	%line{65} %argrw{"wr"}
	if		$tmp120 338 338 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:66
#     return 0.0;
	assign		$tmp119 $const2 	%line{66} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:67
#   return f;
	assign		$tmp119 ___441_f 	%line{67} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:206
#     value += safe_snoise(p) * pwr;
	mul		$tmp121 $tmp119 ___522_pwr 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{206} %argrw{"wrr"}
	add		___522_value ___522_value $tmp121 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:207
#     pwr *= pwHL;
	mul		___522_pwr ___522_pwr ___522_pwHL 	%line{207} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 348 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:87
#     return a * vector2(b, b);
	assign		$tmp122.x lacunarity 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{87} %argrw{"wr"}
	assign		$tmp122.y lacunarity 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 348 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___522_p.x ___522_p.x $tmp122.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{77} %argrw{"wrr"}
	mul		___522_p.y ___522_p.y $tmp122.y 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:205
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp123 ___523_i 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{205} %argrw{"wr"}
	add		___523_i ___523_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:211
#   float rmd = octaves - floor(octaves);
	floor		$tmp124 octaves 	%line{211} %argrw{"wr"}
	sub		___522_rmd octaves $tmp124 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:212
#   if (rmd != 0.0) {
	neq		$tmp125 ___522_rmd $const2 	%line{212} %argrw{"wrr"}
	if		$tmp125 364 364 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:213
#     value += rmd * safe_snoise(p) * pwr;
	functioncall	$const10 361 	%line{213} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:64
#   float f = noise("snoise", p.x, p.y);
	noise		___441_f $const11 ___522_p.x ___522_p.y 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{64} %argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:65
#   if (isinf(f))
	isinf		$tmp127 ___441_f 	%line{65} %argrw{"wr"}
	if		$tmp127 360 360 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:66
#     return 0.0;
	assign		$tmp126 $const2 	%line{66} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:67
#   return f;
	assign		$tmp126 ___441_f 	%line{67} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:213
#     value += rmd * safe_snoise(p) * pwr;
	mul		$tmp128 ___522_rmd $tmp126 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{213} %argrw{"wrr"}
	mul		$tmp129 $tmp128 ___522_pwr 	%argrw{"wrr"}
	add		___522_value ___522_value $tmp129 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:216
#   return value;
	assign		Fac ___522_value 	%line{216} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:739
#     else if (type == "hybrid_multifractal") {
	eq		$tmp130 type $const15 	%line{739} %argrw{"wrr"}
	if		$tmp130 439 556 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:740
#       Fac = noise_musgrave_hybrid_multi_fractal_2d(
	functioncall	$const26 439 	%line{740} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:293
#   vector2 p = co;
	assign		___534_p.x ___589_p.x 	%line{293} %argrw{"wr"}
	assign		___534_p.y ___589_p.y 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:294
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp131 dimension 	%line{294} %argrw{"wr"}
	pow		___534_pwHL lacunarity $tmp131 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:295
#   float pwr = pwHL;
	assign		___534_pwr ___534_pwHL 	%line{295} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:297
#   float value = safe_snoise(p) + offset;
	functioncall	$const10 380 	%line{297} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:64
#   float f = noise("snoise", p.x, p.y);
	noise		___441_f $const11 ___534_p.x ___534_p.y 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{64} %argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:65
#   if (isinf(f))
	isinf		$tmp133 ___441_f 	%line{65} %argrw{"wr"}
	if		$tmp133 379 379 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:66
#     return 0.0;
	assign		$tmp132 $const2 	%line{66} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:67
#   return f;
	assign		$tmp132 ___441_f 	%line{67} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:297
#   float value = safe_snoise(p) + offset;
	add		___534_value $tmp132 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{297} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:298
#   float weight = gain * value;
	mul		___534_weight Gain ___534_value 	%line{298} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 388 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:87
#     return a * vector2(b, b);
	assign		$tmp134.x lacunarity 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{87} %argrw{"wr"}
	assign		$tmp134.y lacunarity 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 388 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___534_p.x ___534_p.x $tmp134.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{77} %argrw{"wrr"}
	mul		___534_p.y ___534_p.y $tmp134.y 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:301
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	for		$tmp140 390 398 421 423 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{301} %argrw{"r"}
	assign		___535_i $const12 	%argrw{"wr"}
	gt		$tmp135 ___534_weight $const17 	%argrw{"wrr"}
	neq		$tmp136 $tmp135 $const9 	%argrw{"wrr"}
	if		$tmp136 397 397 	%argrw{"r"}
	assign		$tmp137 octaves 	%argrw{"wr"}
	lt		$tmp138 ___535_i $tmp137 	%argrw{"wrr"}
	neq		$tmp139 $tmp138 $const9 	%argrw{"wrr"}
	assign		$tmp136 $tmp139 	%argrw{"wr"}
	neq		$tmp140 $tmp136 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:302
#     if (weight > 1.0) {
	gt		$tmp141 ___534_weight $const8 	%line{302} %argrw{"wrr"}
	if		$tmp141 401 401 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:303
#       weight = 1.0;
	assign		___534_weight $const8 	%line{303} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:306
#     float signal = (safe_snoise(p) + offset) * pwr;
	functioncall	$const10 408 	%line{306} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:64
#   float f = noise("snoise", p.x, p.y);
	noise		___441_f $const11 ___534_p.x ___534_p.y 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{64} %argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:65
#   if (isinf(f))
	isinf		$tmp143 ___441_f 	%line{65} %argrw{"wr"}
	if		$tmp143 407 407 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:66
#     return 0.0;
	assign		$tmp142 $const2 	%line{66} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:67
#   return f;
	assign		$tmp142 ___441_f 	%line{67} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:306
#     float signal = (safe_snoise(p) + offset) * pwr;
	add		$tmp144 $tmp142 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{306} %argrw{"wrr"}
	mul		___536_signal $tmp144 ___534_pwr 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:307
#     pwr *= pwHL;
	mul		___534_pwr ___534_pwr ___534_pwHL 	%line{307} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:308
#     value += weight * signal;
	mul		$tmp145 ___534_weight ___536_signal 	%line{308} %argrw{"wrr"}
	add		___534_value ___534_value $tmp145 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:309
#     weight *= gain * signal;
	mul		$tmp146 Gain ___536_signal 	%line{309} %argrw{"wrr"}
	mul		___534_weight ___534_weight $tmp146 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 421 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:87
#     return a * vector2(b, b);
	assign		$tmp147.x lacunarity 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{87} %argrw{"wr"}
	assign		$tmp147.y lacunarity 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 421 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___534_p.x ___534_p.x $tmp147.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{77} %argrw{"wrr"}
	mul		___534_p.y ___534_p.y $tmp147.y 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:301
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	assign		$tmp148 ___535_i 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{301} %argrw{"wr"}
	add		___535_i ___535_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:313
#   float rmd = octaves - floor(octaves);
	floor		$tmp149 octaves 	%line{313} %argrw{"wr"}
	sub		___534_rmd octaves $tmp149 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:314
#   if (rmd != 0.0) {
	neq		$tmp150 ___534_rmd $const2 	%line{314} %argrw{"wrr"}
	if		$tmp150 438 438 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:315
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	functioncall	$const10 434 	%line{315} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:64
#   float f = noise("snoise", p.x, p.y);
	noise		___441_f $const11 ___534_p.x ___534_p.y 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{64} %argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:65
#   if (isinf(f))
	isinf		$tmp152 ___441_f 	%line{65} %argrw{"wr"}
	if		$tmp152 433 433 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:66
#     return 0.0;
	assign		$tmp151 $const2 	%line{66} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:67
#   return f;
	assign		$tmp151 ___441_f 	%line{67} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:315
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	add		$tmp153 $tmp151 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{315} %argrw{"wrr"}
	mul		$tmp154 $tmp153 ___534_pwr 	%argrw{"wrr"}
	mul		$tmp155 ___534_rmd $tmp154 	%argrw{"wrr"}
	add		___534_value ___534_value $tmp155 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:318
#   return value;
	assign		Fac ___534_value 	%line{318} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:743
#     else if (type == "ridged_multifractal") {
	eq		$tmp156 type $const18 	%line{743} %argrw{"wrr"}
	if		$tmp156 491 556 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:744
#       Fac = noise_musgrave_ridged_multi_fractal_2d(
	functioncall	$const27 491 	%line{744} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:332
#   vector2 p = co;
	assign		___539_p.x ___589_p.x 	%line{332} %argrw{"wr"}
	assign		___539_p.y ___589_p.y 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:333
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp157 dimension 	%line{333} %argrw{"wr"}
	pow		___539_pwHL lacunarity $tmp157 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:334
#   float pwr = pwHL;
	assign		___539_pwr ___539_pwHL 	%line{334} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:336
#   float signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 454 	%line{336} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:64
#   float f = noise("snoise", p.x, p.y);
	noise		___441_f $const11 ___539_p.x ___539_p.y 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{64} %argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:65
#   if (isinf(f))
	isinf		$tmp160 ___441_f 	%line{65} %argrw{"wr"}
	if		$tmp160 453 453 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:66
#     return 0.0;
	assign		$tmp159 $const2 	%line{66} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:67
#   return f;
	assign		$tmp159 ___441_f 	%line{67} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:336
#   float signal = offset - fabs(safe_snoise(p));
	fabs		$tmp158 $tmp159 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{336} %argrw{"wr"}
	sub		___539_signal Offset $tmp158 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:337
#   signal *= signal;
	mul		___539_signal ___539_signal ___539_signal 	%line{337} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:338
#   float value = signal;
	assign		___539_value ___539_signal 	%line{338} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:339
#   float weight = 1.0;
	assign		___539_weight $const8 	%line{339} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:341
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp163 461 464 488 490 	%line{341} %argrw{"r"}
	assign		___540_i $const12 	%argrw{"wr"}
	assign		$tmp161 octaves 	%argrw{"wr"}
	lt		$tmp162 ___540_i $tmp161 	%argrw{"wrr"}
	neq		$tmp163 $tmp162 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 470 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:87
#     return a * vector2(b, b);
	assign		$tmp164.x lacunarity 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{87} %argrw{"wr"}
	assign		$tmp164.y lacunarity 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 470 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___539_p.x ___539_p.x $tmp164.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{77} %argrw{"wrr"}
	mul		___539_p.y ___539_p.y $tmp164.y 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:343
#     weight = clamp(signal * gain, 0.0, 1.0);
	mul		$tmp165 ___539_signal Gain 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{343} %argrw{"wrr"}
	functioncall	$const4 474 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\stdosl.h:163
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp166 $tmp165 $const8 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\stdosl.h"} %line{163} %argrw{"wrr"}
	max		___539_weight $tmp166 $const2 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:344
#     signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 481 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{344} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:64
#   float f = noise("snoise", p.x, p.y);
	noise		___441_f $const11 ___539_p.x ___539_p.y 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{64} %argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:65
#   if (isinf(f))
	isinf		$tmp169 ___441_f 	%line{65} %argrw{"wr"}
	if		$tmp169 480 480 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:66
#     return 0.0;
	assign		$tmp168 $const2 	%line{66} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:67
#   return f;
	assign		$tmp168 ___441_f 	%line{67} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:344
#     signal = offset - fabs(safe_snoise(p));
	fabs		$tmp167 $tmp168 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{344} %argrw{"wr"}
	sub		___539_signal Offset $tmp167 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:345
#     signal *= signal;
	mul		___539_signal ___539_signal ___539_signal 	%line{345} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:346
#     signal *= weight;
	mul		___539_signal ___539_signal ___539_weight 	%line{346} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:347
#     value += signal * pwr;
	mul		$tmp170 ___539_signal ___539_pwr 	%line{347} %argrw{"wrr"}
	add		___539_value ___539_value $tmp170 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:348
#     pwr *= pwHL;
	mul		___539_pwr ___539_pwr ___539_pwHL 	%line{348} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:341
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp171 ___540_i 	%line{341} %argrw{"wr"}
	add		___540_i ___540_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:351
#   return value;
	assign		Fac ___539_value 	%line{351} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:747
#     else if (type == "hetero_terrain") {
	eq		$tmp172 type $const20 	%line{747} %argrw{"wrr"}
	if		$tmp172 555 556 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:748
#       Fac = noise_musgrave_hetero_terrain_2d(p, dimension, lacunarity, octaves, Offset);
	functioncall	$const28 555 	%line{748} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:258
#   vector2 p = co;
	assign		___530_p.x ___589_p.x 	%line{258} %argrw{"wr"}
	assign		___530_p.y ___589_p.y 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:259
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp173 dimension 	%line{259} %argrw{"wr"}
	pow		___530_pwHL lacunarity $tmp173 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:260
#   float pwr = pwHL;
	assign		___530_pwr ___530_pwHL 	%line{260} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:263
#   float value = offset + safe_snoise(p);
	functioncall	$const10 506 	%line{263} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:64
#   float f = noise("snoise", p.x, p.y);
	noise		___441_f $const11 ___530_p.x ___530_p.y 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{64} %argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:65
#   if (isinf(f))
	isinf		$tmp175 ___441_f 	%line{65} %argrw{"wr"}
	if		$tmp175 505 505 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:66
#     return 0.0;
	assign		$tmp174 $const2 	%line{66} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:67
#   return f;
	assign		$tmp174 ___441_f 	%line{67} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:263
#   float value = offset + safe_snoise(p);
	add		___530_value Offset $tmp174 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{263} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 513 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:87
#     return a * vector2(b, b);
	assign		$tmp176.x lacunarity 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{87} %argrw{"wr"}
	assign		$tmp176.y lacunarity 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 513 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___530_p.x ___530_p.x $tmp176.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{77} %argrw{"wrr"}
	mul		___530_p.y ___530_p.y $tmp176.y 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:266
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp179 515 518 536 538 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{266} %argrw{"r"}
	assign		___531_i $const12 	%argrw{"wr"}
	assign		$tmp177 octaves 	%argrw{"wr"}
	lt		$tmp178 ___531_i $tmp177 	%argrw{"wrr"}
	neq		$tmp179 $tmp178 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:267
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 525 	%line{267} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:64
#   float f = noise("snoise", p.x, p.y);
	noise		___441_f $const11 ___530_p.x ___530_p.y 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{64} %argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:65
#   if (isinf(f))
	isinf		$tmp181 ___441_f 	%line{65} %argrw{"wr"}
	if		$tmp181 524 524 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:66
#     return 0.0;
	assign		$tmp180 $const2 	%line{66} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:67
#   return f;
	assign		$tmp180 ___441_f 	%line{67} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:267
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp182 $tmp180 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{267} %argrw{"wrr"}
	mul		$tmp183 $tmp182 ___530_pwr 	%argrw{"wrr"}
	mul		___532_increment $tmp183 ___530_value 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:268
#     value += increment;
	add		___530_value ___530_value ___532_increment 	%line{268} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:269
#     pwr *= pwHL;
	mul		___530_pwr ___530_pwr ___530_pwHL 	%line{269} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 536 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:87
#     return a * vector2(b, b);
	assign		$tmp184.x lacunarity 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{87} %argrw{"wr"}
	assign		$tmp184.y lacunarity 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 536 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h:77
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___530_p.x ___530_p.x $tmp184.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector2.h"} %line{77} %argrw{"wrr"}
	mul		___530_p.y ___530_p.y $tmp184.y 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:266
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp185 ___531_i 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{266} %argrw{"wr"}
	add		___531_i ___531_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:273
#   float rmd = octaves - floor(octaves);
	floor		$tmp186 octaves 	%line{273} %argrw{"wr"}
	sub		___530_rmd octaves $tmp186 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:274
#   if (rmd != 0.0) {
	neq		$tmp187 ___530_rmd $const2 	%line{274} %argrw{"wrr"}
	if		$tmp187 554 554 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:275
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 549 	%line{275} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:64
#   float f = noise("snoise", p.x, p.y);
	noise		___441_f $const11 ___530_p.x ___530_p.y 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{64} %argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:65
#   if (isinf(f))
	isinf		$tmp189 ___441_f 	%line{65} %argrw{"wr"}
	if		$tmp189 548 548 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:66
#     return 0.0;
	assign		$tmp188 $const2 	%line{66} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:67
#   return f;
	assign		$tmp188 ___441_f 	%line{67} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:275
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp190 $tmp188 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{275} %argrw{"wrr"}
	mul		$tmp191 $tmp190 ___530_pwr 	%argrw{"wrr"}
	mul		___533_increment $tmp191 ___530_value 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:276
#     value += rmd * increment;
	mul		$tmp192 ___530_rmd ___533_increment 	%line{276} %argrw{"wrr"}
	add		___530_value ___530_value $tmp192 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:279
#   return value;
	assign		Fac ___530_value 	%line{279} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:751
#       Fac = 0.0;
	assign		Fac $const2 	%line{751} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:754
#   else if (dimensions == "3D") {
	eq		$tmp193 dimensions $const29 	%line{754} %argrw{"wrr"}
	if		$tmp193 806 1160 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:755
#     vector3 p = s * Scale;
	mul		___596_p s Scale 	%line{755} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:756
#     if (type == "multifractal") {
	eq		$tmp194 type $const6 	%line{756} %argrw{"wrr"}
	if		$tmp194 602 806 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:757
#       Fac = noise_musgrave_multi_fractal_3d(p, dimension, lacunarity, octaves);
	functioncall	$const30 602 	%line{757} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:393
#   vector3 p = co;
	assign		___546_p ___596_p 	%line{393} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:394
#   float value = 1.0;
	assign		___546_value $const8 	%line{394} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:395
#   float pwr = 1.0;
	assign		___546_pwr $const8 	%line{395} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:396
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp195 dimension 	%line{396} %argrw{"wr"}
	pow		___546_pwHL lacunarity $tmp195 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:398
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp198 569 572 584 586 	%line{398} %argrw{"r"}
	assign		___547_i $const9 	%argrw{"wr"}
	assign		$tmp196 octaves 	%argrw{"wr"}
	lt		$tmp197 ___547_i $tmp196 	%argrw{"wrr"}
	neq		$tmp198 $tmp197 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:399
#     value *= (pwr * safe_snoise(p) + 1.0);
	functioncall	$const10 579 	%line{399} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:72
#   float f = noise("snoise", p);
	noise		___442_f $const11 ___546_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{72} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:73
#   if (isinf(f))
	isinf		$tmp200 ___442_f 	%line{73} %argrw{"wr"}
	if		$tmp200 578 578 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:74
#     return 0.0;
	assign		$tmp199 $const2 	%line{74} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:75
#   return f;
	assign		$tmp199 ___442_f 	%line{75} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:399
#     value *= (pwr * safe_snoise(p) + 1.0);
	mul		$tmp201 ___546_pwr $tmp199 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{399} %argrw{"wrr"}
	add		$tmp202 $tmp201 $const8 	%argrw{"wrr"}
	mul		___546_value ___546_value $tmp202 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:400
#     pwr *= pwHL;
	mul		___546_pwr ___546_pwr ___546_pwHL 	%line{400} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:401
#     p *= lacunarity;
	mul		___546_p ___546_p lacunarity 	%line{401} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:398
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp203 ___547_i 	%line{398} %argrw{"wr"}
	add		___547_i ___547_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:404
#   float rmd = octaves - floor(octaves);
	floor		$tmp204 octaves 	%line{404} %argrw{"wr"}
	sub		___546_rmd octaves $tmp204 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:405
#   if (rmd != 0.0) {
	neq		$tmp205 ___546_rmd $const2 	%line{405} %argrw{"wrr"}
	if		$tmp205 601 601 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:406
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp206 ___546_rmd ___546_pwr 	%line{406} %argrw{"wrr"}
	functioncall	$const10 598 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:72
#   float f = noise("snoise", p);
	noise		___442_f $const11 ___546_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{72} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:73
#   if (isinf(f))
	isinf		$tmp208 ___442_f 	%line{73} %argrw{"wr"}
	if		$tmp208 597 597 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:74
#     return 0.0;
	assign		$tmp207 $const2 	%line{74} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:75
#   return f;
	assign		$tmp207 ___442_f 	%line{75} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:406
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp209 $tmp206 $tmp207 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{406} %argrw{"wrr"}
	add		$tmp210 $tmp209 $const8 	%argrw{"wrr"}
	mul		___546_value ___546_value $tmp210 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:409
#   return value;
	assign		Fac ___546_value 	%line{409} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:759
#     else if (type == "fBM") {
	eq		$tmp211 type $const13 	%line{759} %argrw{"wrr"}
	if		$tmp211 643 806 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:760
#       Fac = noise_musgrave_fBm_3d(p, dimension, lacunarity, octaves);
	functioncall	$const31 643 	%line{760} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:365
#   vector3 p = co;
	assign		___542_p ___596_p 	%line{365} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:366
#   float value = 0.0;
	assign		___542_value $const2 	%line{366} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:367
#   float pwr = 1.0;
	assign		___542_pwr $const8 	%line{367} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:368
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp212 dimension 	%line{368} %argrw{"wr"}
	pow		___542_pwHL lacunarity $tmp212 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:370
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp215 612 615 626 628 	%line{370} %argrw{"r"}
	assign		___543_i $const9 	%argrw{"wr"}
	assign		$tmp213 octaves 	%argrw{"wr"}
	lt		$tmp214 ___543_i $tmp213 	%argrw{"wrr"}
	neq		$tmp215 $tmp214 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:371
#     value += safe_snoise(p) * pwr;
	functioncall	$const10 622 	%line{371} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:72
#   float f = noise("snoise", p);
	noise		___442_f $const11 ___542_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{72} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:73
#   if (isinf(f))
	isinf		$tmp217 ___442_f 	%line{73} %argrw{"wr"}
	if		$tmp217 621 621 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:74
#     return 0.0;
	assign		$tmp216 $const2 	%line{74} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:75
#   return f;
	assign		$tmp216 ___442_f 	%line{75} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:371
#     value += safe_snoise(p) * pwr;
	mul		$tmp218 $tmp216 ___542_pwr 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{371} %argrw{"wrr"}
	add		___542_value ___542_value $tmp218 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:372
#     pwr *= pwHL;
	mul		___542_pwr ___542_pwr ___542_pwHL 	%line{372} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:373
#     p *= lacunarity;
	mul		___542_p ___542_p lacunarity 	%line{373} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:370
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp219 ___543_i 	%line{370} %argrw{"wr"}
	add		___543_i ___543_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:376
#   float rmd = octaves - floor(octaves);
	floor		$tmp220 octaves 	%line{376} %argrw{"wr"}
	sub		___542_rmd octaves $tmp220 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:377
#   if (rmd != 0.0) {
	neq		$tmp221 ___542_rmd $const2 	%line{377} %argrw{"wrr"}
	if		$tmp221 642 642 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:378
#     value += rmd * safe_snoise(p) * pwr;
	functioncall	$const10 639 	%line{378} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:72
#   float f = noise("snoise", p);
	noise		___442_f $const11 ___542_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{72} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:73
#   if (isinf(f))
	isinf		$tmp223 ___442_f 	%line{73} %argrw{"wr"}
	if		$tmp223 638 638 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:74
#     return 0.0;
	assign		$tmp222 $const2 	%line{74} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:75
#   return f;
	assign		$tmp222 ___442_f 	%line{75} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:378
#     value += rmd * safe_snoise(p) * pwr;
	mul		$tmp224 ___542_rmd $tmp222 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{378} %argrw{"wrr"}
	mul		$tmp225 $tmp224 ___542_pwr 	%argrw{"wrr"}
	add		___542_value ___542_value $tmp225 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:381
#   return value;
	assign		Fac ___542_value 	%line{381} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:762
#     else if (type == "hybrid_multifractal") {
	eq		$tmp226 type $const15 	%line{762} %argrw{"wrr"}
	if		$tmp226 706 806 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:763
#       Fac = noise_musgrave_hybrid_multi_fractal_3d(
	functioncall	$const32 706 	%line{763} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:458
#   vector3 p = co;
	assign		___554_p ___596_p 	%line{458} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:459
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp227 dimension 	%line{459} %argrw{"wr"}
	pow		___554_pwHL lacunarity $tmp227 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:460
#   float pwr = pwHL;
	assign		___554_pwr ___554_pwHL 	%line{460} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:462
#   float value = safe_snoise(p) + offset;
	functioncall	$const10 657 	%line{462} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:72
#   float f = noise("snoise", p);
	noise		___442_f $const11 ___554_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{72} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:73
#   if (isinf(f))
	isinf		$tmp229 ___442_f 	%line{73} %argrw{"wr"}
	if		$tmp229 656 656 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:74
#     return 0.0;
	assign		$tmp228 $const2 	%line{74} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:75
#   return f;
	assign		$tmp228 ___442_f 	%line{75} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:462
#   float value = safe_snoise(p) + offset;
	add		___554_value $tmp228 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{462} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:463
#   float weight = gain * value;
	mul		___554_weight Gain ___554_value 	%line{463} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:464
#   p *= lacunarity;
	mul		___554_p ___554_p lacunarity 	%line{464} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:466
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	for		$tmp235 662 670 688 690 	%line{466} %argrw{"r"}
	assign		___555_i $const12 	%argrw{"wr"}
	gt		$tmp230 ___554_weight $const17 	%argrw{"wrr"}
	neq		$tmp231 $tmp230 $const9 	%argrw{"wrr"}
	if		$tmp231 669 669 	%argrw{"r"}
	assign		$tmp232 octaves 	%argrw{"wr"}
	lt		$tmp233 ___555_i $tmp232 	%argrw{"wrr"}
	neq		$tmp234 $tmp233 $const9 	%argrw{"wrr"}
	assign		$tmp231 $tmp234 	%argrw{"wr"}
	neq		$tmp235 $tmp231 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:467
#     if (weight > 1.0) {
	gt		$tmp236 ___554_weight $const8 	%line{467} %argrw{"wrr"}
	if		$tmp236 673 673 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:468
#       weight = 1.0;
	assign		___554_weight $const8 	%line{468} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:471
#     float signal = (safe_snoise(p) + offset) * pwr;
	functioncall	$const10 680 	%line{471} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:72
#   float f = noise("snoise", p);
	noise		___442_f $const11 ___554_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{72} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:73
#   if (isinf(f))
	isinf		$tmp238 ___442_f 	%line{73} %argrw{"wr"}
	if		$tmp238 679 679 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:74
#     return 0.0;
	assign		$tmp237 $const2 	%line{74} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:75
#   return f;
	assign		$tmp237 ___442_f 	%line{75} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:471
#     float signal = (safe_snoise(p) + offset) * pwr;
	add		$tmp239 $tmp237 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{471} %argrw{"wrr"}
	mul		___556_signal $tmp239 ___554_pwr 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:472
#     pwr *= pwHL;
	mul		___554_pwr ___554_pwr ___554_pwHL 	%line{472} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:473
#     value += weight * signal;
	mul		$tmp240 ___554_weight ___556_signal 	%line{473} %argrw{"wrr"}
	add		___554_value ___554_value $tmp240 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:474
#     weight *= gain * signal;
	mul		$tmp241 Gain ___556_signal 	%line{474} %argrw{"wrr"}
	mul		___554_weight ___554_weight $tmp241 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:475
#     p *= lacunarity;
	mul		___554_p ___554_p lacunarity 	%line{475} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:466
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	assign		$tmp242 ___555_i 	%line{466} %argrw{"wr"}
	add		___555_i ___555_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:478
#   float rmd = octaves - floor(octaves);
	floor		$tmp243 octaves 	%line{478} %argrw{"wr"}
	sub		___554_rmd octaves $tmp243 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:479
#   if (rmd != 0.0) {
	neq		$tmp244 ___554_rmd $const2 	%line{479} %argrw{"wrr"}
	if		$tmp244 705 705 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:480
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	functioncall	$const10 701 	%line{480} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:72
#   float f = noise("snoise", p);
	noise		___442_f $const11 ___554_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{72} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:73
#   if (isinf(f))
	isinf		$tmp246 ___442_f 	%line{73} %argrw{"wr"}
	if		$tmp246 700 700 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:74
#     return 0.0;
	assign		$tmp245 $const2 	%line{74} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:75
#   return f;
	assign		$tmp245 ___442_f 	%line{75} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:480
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	add		$tmp247 $tmp245 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{480} %argrw{"wrr"}
	mul		$tmp248 $tmp247 ___554_pwr 	%argrw{"wrr"}
	mul		$tmp249 ___554_rmd $tmp248 	%argrw{"wrr"}
	add		___554_value ___554_value $tmp249 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:483
#   return value;
	assign		Fac ___554_value 	%line{483} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:766
#     else if (type == "ridged_multifractal") {
	eq		$tmp250 type $const18 	%line{766} %argrw{"wrr"}
	if		$tmp250 752 806 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:767
#       Fac = noise_musgrave_ridged_multi_fractal_3d(
	functioncall	$const33 752 	%line{767} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:497
#   vector3 p = co;
	assign		___559_p ___596_p 	%line{497} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:498
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp251 dimension 	%line{498} %argrw{"wr"}
	pow		___559_pwHL lacunarity $tmp251 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:499
#   float pwr = pwHL;
	assign		___559_pwr ___559_pwHL 	%line{499} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:501
#   float signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 720 	%line{501} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:72
#   float f = noise("snoise", p);
	noise		___442_f $const11 ___559_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{72} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:73
#   if (isinf(f))
	isinf		$tmp254 ___442_f 	%line{73} %argrw{"wr"}
	if		$tmp254 719 719 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:74
#     return 0.0;
	assign		$tmp253 $const2 	%line{74} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:75
#   return f;
	assign		$tmp253 ___442_f 	%line{75} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:501
#   float signal = offset - fabs(safe_snoise(p));
	fabs		$tmp252 $tmp253 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{501} %argrw{"wr"}
	sub		___559_signal Offset $tmp252 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:502
#   signal *= signal;
	mul		___559_signal ___559_signal ___559_signal 	%line{502} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:503
#   float value = signal;
	assign		___559_value ___559_signal 	%line{503} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:504
#   float weight = 1.0;
	assign		___559_weight $const8 	%line{504} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:506
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp257 727 730 749 751 	%line{506} %argrw{"r"}
	assign		___560_i $const12 	%argrw{"wr"}
	assign		$tmp255 octaves 	%argrw{"wr"}
	lt		$tmp256 ___560_i $tmp255 	%argrw{"wrr"}
	neq		$tmp257 $tmp256 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:507
#     p *= lacunarity;
	mul		___559_p ___559_p lacunarity 	%line{507} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:508
#     weight = clamp(signal * gain, 0.0, 1.0);
	mul		$tmp258 ___559_signal Gain 	%line{508} %argrw{"wrr"}
	functioncall	$const4 735 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\stdosl.h:163
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp259 $tmp258 $const8 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\stdosl.h"} %line{163} %argrw{"wrr"}
	max		___559_weight $tmp259 $const2 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:509
#     signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 742 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{509} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:72
#   float f = noise("snoise", p);
	noise		___442_f $const11 ___559_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{72} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:73
#   if (isinf(f))
	isinf		$tmp262 ___442_f 	%line{73} %argrw{"wr"}
	if		$tmp262 741 741 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:74
#     return 0.0;
	assign		$tmp261 $const2 	%line{74} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:75
#   return f;
	assign		$tmp261 ___442_f 	%line{75} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:509
#     signal = offset - fabs(safe_snoise(p));
	fabs		$tmp260 $tmp261 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{509} %argrw{"wr"}
	sub		___559_signal Offset $tmp260 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:510
#     signal *= signal;
	mul		___559_signal ___559_signal ___559_signal 	%line{510} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:511
#     signal *= weight;
	mul		___559_signal ___559_signal ___559_weight 	%line{511} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:512
#     value += signal * pwr;
	mul		$tmp263 ___559_signal ___559_pwr 	%line{512} %argrw{"wrr"}
	add		___559_value ___559_value $tmp263 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:513
#     pwr *= pwHL;
	mul		___559_pwr ___559_pwr ___559_pwHL 	%line{513} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:506
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp264 ___560_i 	%line{506} %argrw{"wr"}
	add		___560_i ___560_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:516
#   return value;
	assign		Fac ___559_value 	%line{516} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:770
#     else if (type == "hetero_terrain") {
	eq		$tmp265 type $const20 	%line{770} %argrw{"wrr"}
	if		$tmp265 805 806 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:771
#       Fac = noise_musgrave_hetero_terrain_3d(p, dimension, lacunarity, octaves, Offset);
	functioncall	$const34 805 	%line{771} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:423
#   vector3 p = co;
	assign		___550_p ___596_p 	%line{423} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:424
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp266 dimension 	%line{424} %argrw{"wr"}
	pow		___550_pwHL lacunarity $tmp266 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:425
#   float pwr = pwHL;
	assign		___550_pwr ___550_pwHL 	%line{425} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:428
#   float value = offset + safe_snoise(p);
	functioncall	$const10 766 	%line{428} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:72
#   float f = noise("snoise", p);
	noise		___442_f $const11 ___550_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{72} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:73
#   if (isinf(f))
	isinf		$tmp268 ___442_f 	%line{73} %argrw{"wr"}
	if		$tmp268 765 765 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:74
#     return 0.0;
	assign		$tmp267 $const2 	%line{74} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:75
#   return f;
	assign		$tmp267 ___442_f 	%line{75} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:428
#   float value = offset + safe_snoise(p);
	add		___550_value Offset $tmp267 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{428} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:429
#   p *= lacunarity;
	mul		___550_p ___550_p lacunarity 	%line{429} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:431
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp271 770 773 786 788 	%line{431} %argrw{"r"}
	assign		___551_i $const12 	%argrw{"wr"}
	assign		$tmp269 octaves 	%argrw{"wr"}
	lt		$tmp270 ___551_i $tmp269 	%argrw{"wrr"}
	neq		$tmp271 $tmp270 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:432
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 780 	%line{432} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:72
#   float f = noise("snoise", p);
	noise		___442_f $const11 ___550_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{72} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:73
#   if (isinf(f))
	isinf		$tmp273 ___442_f 	%line{73} %argrw{"wr"}
	if		$tmp273 779 779 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:74
#     return 0.0;
	assign		$tmp272 $const2 	%line{74} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:75
#   return f;
	assign		$tmp272 ___442_f 	%line{75} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:432
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp274 $tmp272 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{432} %argrw{"wrr"}
	mul		$tmp275 $tmp274 ___550_pwr 	%argrw{"wrr"}
	mul		___552_increment $tmp275 ___550_value 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:433
#     value += increment;
	add		___550_value ___550_value ___552_increment 	%line{433} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:434
#     pwr *= pwHL;
	mul		___550_pwr ___550_pwr ___550_pwHL 	%line{434} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:435
#     p *= lacunarity;
	mul		___550_p ___550_p lacunarity 	%line{435} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:431
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp276 ___551_i 	%line{431} %argrw{"wr"}
	add		___551_i ___551_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:438
#   float rmd = octaves - floor(octaves);
	floor		$tmp277 octaves 	%line{438} %argrw{"wr"}
	sub		___550_rmd octaves $tmp277 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:439
#   if (rmd != 0.0) {
	neq		$tmp278 ___550_rmd $const2 	%line{439} %argrw{"wrr"}
	if		$tmp278 804 804 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:440
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 799 	%line{440} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:72
#   float f = noise("snoise", p);
	noise		___442_f $const11 ___550_p 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{72} %argrw{"wrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:73
#   if (isinf(f))
	isinf		$tmp280 ___442_f 	%line{73} %argrw{"wr"}
	if		$tmp280 798 798 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:74
#     return 0.0;
	assign		$tmp279 $const2 	%line{74} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:75
#   return f;
	assign		$tmp279 ___442_f 	%line{75} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:440
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp281 $tmp279 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{440} %argrw{"wrr"}
	mul		$tmp282 $tmp281 ___550_pwr 	%argrw{"wrr"}
	mul		___553_increment $tmp282 ___550_value 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:441
#     value += rmd * increment;
	mul		$tmp283 ___550_rmd ___553_increment 	%line{441} %argrw{"wrr"}
	add		___550_value ___550_value $tmp283 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:444
#   return value;
	assign		Fac ___550_value 	%line{444} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:774
#       Fac = 0.0;
	assign		Fac $const2 	%line{774} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:777
#   else if (dimensions == "4D") {
	eq		$tmp284 dimensions $const35 	%line{777} %argrw{"wrr"}
	if		$tmp284 1159 1160 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:778
#     vector4 p = vector4(s[0], s[1], s[2], W) * Scale;
	compref		$tmp285.x s $const9 	%line{778} %argrw{"wrr"}
	compref		$tmp285.y s $const12 	%argrw{"wrr"}
	compref		$tmp285.z s $const36 	%argrw{"wrr"}
	assign		$tmp285.w W 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 822 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:90
#     return a * vector4(b, b, b, b);
	assign		$tmp286.x Scale 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{90} %argrw{"wr"}
	assign		$tmp286.y Scale 	%argrw{"wr"}
	assign		$tmp286.z Scale 	%argrw{"wr"}
	assign		$tmp286.w Scale 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 822 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___603_p.x $tmp285.x $tmp286.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{80} %argrw{"wrr"}
	mul		___603_p.y $tmp285.y $tmp286.y 	%argrw{"wrr"}
	mul		___603_p.z $tmp285.z $tmp286.z 	%argrw{"wrr"}
	mul		___603_p.w $tmp285.w $tmp286.w 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:779
#     if (type == "multifractal") {
	eq		$tmp287 type $const6 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{779} %argrw{"wrr"}
	if		$tmp287 879 1159 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:780
#       Fac = noise_musgrave_multi_fractal_4d(p, dimension, lacunarity, octaves);
	functioncall	$const37 879 	%line{780} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:558
#   vector4 p = co;
	assign		___566_p.x ___603_p.x 	%line{558} %argrw{"wr"}
	assign		___566_p.y ___603_p.y 	%argrw{"wr"}
	assign		___566_p.z ___603_p.z 	%argrw{"wr"}
	assign		___566_p.w ___603_p.w 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:559
#   float value = 1.0;
	assign		___566_value $const8 	%line{559} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:560
#   float pwr = 1.0;
	assign		___566_pwr $const8 	%line{560} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:561
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp288 dimension 	%line{561} %argrw{"wr"}
	pow		___566_pwHL lacunarity $tmp288 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:563
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp291 835 838 860 862 	%line{563} %argrw{"r"}
	assign		___567_i $const9 	%argrw{"wr"}
	assign		$tmp289 octaves 	%argrw{"wr"}
	lt		$tmp290 ___567_i $tmp289 	%argrw{"wrr"}
	neq		$tmp291 $tmp290 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:564
#     value *= (pwr * safe_snoise(p) + 1.0);
	functioncall	$const10 846 	%line{564} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:80
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp293 ___566_p.x ___566_p.y ___566_p.z 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{80} %argrw{"wrrr"}
	noise		___443_f $const11 $tmp293 ___566_p.w 	%argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:81
#   if (isinf(f))
	isinf		$tmp294 ___443_f 	%line{81} %argrw{"wr"}
	if		$tmp294 845 845 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:82
#     return 0.0;
	assign		$tmp292 $const2 	%line{82} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:83
#   return f;
	assign		$tmp292 ___443_f 	%line{83} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:564
#     value *= (pwr * safe_snoise(p) + 1.0);
	mul		$tmp295 ___566_pwr $tmp292 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{564} %argrw{"wrr"}
	add		$tmp296 $tmp295 $const8 	%argrw{"wrr"}
	mul		___566_value ___566_value $tmp296 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:565
#     pwr *= pwHL;
	mul		___566_pwr ___566_pwr ___566_pwHL 	%line{565} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 860 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:90
#     return a * vector4(b, b, b, b);
	assign		$tmp297.x lacunarity 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{90} %argrw{"wr"}
	assign		$tmp297.y lacunarity 	%argrw{"wr"}
	assign		$tmp297.z lacunarity 	%argrw{"wr"}
	assign		$tmp297.w lacunarity 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 860 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___566_p.x ___566_p.x $tmp297.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{80} %argrw{"wrr"}
	mul		___566_p.y ___566_p.y $tmp297.y 	%argrw{"wrr"}
	mul		___566_p.z ___566_p.z $tmp297.z 	%argrw{"wrr"}
	mul		___566_p.w ___566_p.w $tmp297.w 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:563
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp298 ___567_i 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{563} %argrw{"wr"}
	add		___567_i ___567_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:569
#   float rmd = octaves - floor(octaves);
	floor		$tmp299 octaves 	%line{569} %argrw{"wr"}
	sub		___566_rmd octaves $tmp299 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:570
#   if (rmd != 0.0) {
	neq		$tmp300 ___566_rmd $const2 	%line{570} %argrw{"wrr"}
	if		$tmp300 878 878 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:571
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp301 ___566_rmd ___566_pwr 	%line{571} %argrw{"wrr"}
	functioncall	$const10 875 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:80
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp303 ___566_p.x ___566_p.y ___566_p.z 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{80} %argrw{"wrrr"}
	noise		___443_f $const11 $tmp303 ___566_p.w 	%argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:81
#   if (isinf(f))
	isinf		$tmp304 ___443_f 	%line{81} %argrw{"wr"}
	if		$tmp304 874 874 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:82
#     return 0.0;
	assign		$tmp302 $const2 	%line{82} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:83
#   return f;
	assign		$tmp302 ___443_f 	%line{83} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:571
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp305 $tmp301 $tmp302 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{571} %argrw{"wrr"}
	add		$tmp306 $tmp305 $const8 	%argrw{"wrr"}
	mul		___566_value ___566_value $tmp306 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:574
#   return value;
	assign		Fac ___566_value 	%line{574} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:782
#     else if (type == "fBM") {
	eq		$tmp307 type $const13 	%line{782} %argrw{"wrr"}
	if		$tmp307 934 1159 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:783
#       Fac = noise_musgrave_fBm_4d(p, dimension, lacunarity, octaves);
	functioncall	$const38 934 	%line{783} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:530
#   vector4 p = co;
	assign		___562_p.x ___603_p.x 	%line{530} %argrw{"wr"}
	assign		___562_p.y ___603_p.y 	%argrw{"wr"}
	assign		___562_p.z ___603_p.z 	%argrw{"wr"}
	assign		___562_p.w ___603_p.w 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:531
#   float value = 0.0;
	assign		___562_value $const2 	%line{531} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:532
#   float pwr = 1.0;
	assign		___562_pwr $const8 	%line{532} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:533
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp308 dimension 	%line{533} %argrw{"wr"}
	pow		___562_pwHL lacunarity $tmp308 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:535
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp311 892 895 916 918 	%line{535} %argrw{"r"}
	assign		___563_i $const9 	%argrw{"wr"}
	assign		$tmp309 octaves 	%argrw{"wr"}
	lt		$tmp310 ___563_i $tmp309 	%argrw{"wrr"}
	neq		$tmp311 $tmp310 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:536
#     value += safe_snoise(p) * pwr;
	functioncall	$const10 903 	%line{536} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:80
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp313 ___562_p.x ___562_p.y ___562_p.z 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{80} %argrw{"wrrr"}
	noise		___443_f $const11 $tmp313 ___562_p.w 	%argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:81
#   if (isinf(f))
	isinf		$tmp314 ___443_f 	%line{81} %argrw{"wr"}
	if		$tmp314 902 902 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:82
#     return 0.0;
	assign		$tmp312 $const2 	%line{82} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:83
#   return f;
	assign		$tmp312 ___443_f 	%line{83} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:536
#     value += safe_snoise(p) * pwr;
	mul		$tmp315 $tmp312 ___562_pwr 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{536} %argrw{"wrr"}
	add		___562_value ___562_value $tmp315 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:537
#     pwr *= pwHL;
	mul		___562_pwr ___562_pwr ___562_pwHL 	%line{537} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 916 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:90
#     return a * vector4(b, b, b, b);
	assign		$tmp316.x lacunarity 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{90} %argrw{"wr"}
	assign		$tmp316.y lacunarity 	%argrw{"wr"}
	assign		$tmp316.z lacunarity 	%argrw{"wr"}
	assign		$tmp316.w lacunarity 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 916 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___562_p.x ___562_p.x $tmp316.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{80} %argrw{"wrr"}
	mul		___562_p.y ___562_p.y $tmp316.y 	%argrw{"wrr"}
	mul		___562_p.z ___562_p.z $tmp316.z 	%argrw{"wrr"}
	mul		___562_p.w ___562_p.w $tmp316.w 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:535
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp317 ___563_i 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{535} %argrw{"wr"}
	add		___563_i ___563_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:541
#   float rmd = octaves - floor(octaves);
	floor		$tmp318 octaves 	%line{541} %argrw{"wr"}
	sub		___562_rmd octaves $tmp318 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:542
#   if (rmd != 0.0) {
	neq		$tmp319 ___562_rmd $const2 	%line{542} %argrw{"wrr"}
	if		$tmp319 933 933 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:543
#     value += rmd * safe_snoise(p) * pwr;
	functioncall	$const10 930 	%line{543} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:80
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp321 ___562_p.x ___562_p.y ___562_p.z 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{80} %argrw{"wrrr"}
	noise		___443_f $const11 $tmp321 ___562_p.w 	%argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:81
#   if (isinf(f))
	isinf		$tmp322 ___443_f 	%line{81} %argrw{"wr"}
	if		$tmp322 929 929 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:82
#     return 0.0;
	assign		$tmp320 $const2 	%line{82} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:83
#   return f;
	assign		$tmp320 ___443_f 	%line{83} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:543
#     value += rmd * safe_snoise(p) * pwr;
	mul		$tmp323 ___562_rmd $tmp320 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{543} %argrw{"wrr"}
	mul		$tmp324 $tmp323 ___562_pwr 	%argrw{"wrr"}
	add		___562_value ___562_value $tmp324 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:546
#   return value;
	assign		Fac ___562_value 	%line{546} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:785
#     else if (type == "hybrid_multifractal") {
	eq		$tmp325 type $const15 	%line{785} %argrw{"wrr"}
	if		$tmp325 1021 1159 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:786
#       Fac = noise_musgrave_hybrid_multi_fractal_4d(
	functioncall	$const39 1021 	%line{786} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:623
#   vector4 p = co;
	assign		___574_p.x ___603_p.x 	%line{623} %argrw{"wr"}
	assign		___574_p.y ___603_p.y 	%argrw{"wr"}
	assign		___574_p.z ___603_p.z 	%argrw{"wr"}
	assign		___574_p.w ___603_p.w 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:624
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp326 dimension 	%line{624} %argrw{"wr"}
	pow		___574_pwHL lacunarity $tmp326 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:625
#   float pwr = pwHL;
	assign		___574_pwr ___574_pwHL 	%line{625} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:627
#   float value = safe_snoise(p) + offset;
	functioncall	$const10 952 	%line{627} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:80
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp328 ___574_p.x ___574_p.y ___574_p.z 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{80} %argrw{"wrrr"}
	noise		___443_f $const11 $tmp328 ___574_p.w 	%argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:81
#   if (isinf(f))
	isinf		$tmp329 ___443_f 	%line{81} %argrw{"wr"}
	if		$tmp329 951 951 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:82
#     return 0.0;
	assign		$tmp327 $const2 	%line{82} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:83
#   return f;
	assign		$tmp327 ___443_f 	%line{83} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:627
#   float value = safe_snoise(p) + offset;
	add		___574_value $tmp327 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{627} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:628
#   float weight = gain * value;
	mul		___574_weight Gain ___574_value 	%line{628} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 964 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:90
#     return a * vector4(b, b, b, b);
	assign		$tmp330.x lacunarity 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{90} %argrw{"wr"}
	assign		$tmp330.y lacunarity 	%argrw{"wr"}
	assign		$tmp330.z lacunarity 	%argrw{"wr"}
	assign		$tmp330.w lacunarity 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 964 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___574_p.x ___574_p.x $tmp330.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{80} %argrw{"wrr"}
	mul		___574_p.y ___574_p.y $tmp330.y 	%argrw{"wrr"}
	mul		___574_p.z ___574_p.z $tmp330.z 	%argrw{"wrr"}
	mul		___574_p.w ___574_p.w $tmp330.w 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:631
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	for		$tmp336 966 974 1002 1004 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{631} %argrw{"r"}
	assign		___575_i $const12 	%argrw{"wr"}
	gt		$tmp331 ___574_weight $const17 	%argrw{"wrr"}
	neq		$tmp332 $tmp331 $const9 	%argrw{"wrr"}
	if		$tmp332 973 973 	%argrw{"r"}
	assign		$tmp333 octaves 	%argrw{"wr"}
	lt		$tmp334 ___575_i $tmp333 	%argrw{"wrr"}
	neq		$tmp335 $tmp334 $const9 	%argrw{"wrr"}
	assign		$tmp332 $tmp335 	%argrw{"wr"}
	neq		$tmp336 $tmp332 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:632
#     if (weight > 1.0) {
	gt		$tmp337 ___574_weight $const8 	%line{632} %argrw{"wrr"}
	if		$tmp337 977 977 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:633
#       weight = 1.0;
	assign		___574_weight $const8 	%line{633} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:636
#     float signal = (safe_snoise(p) + offset) * pwr;
	functioncall	$const10 985 	%line{636} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:80
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp339 ___574_p.x ___574_p.y ___574_p.z 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{80} %argrw{"wrrr"}
	noise		___443_f $const11 $tmp339 ___574_p.w 	%argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:81
#   if (isinf(f))
	isinf		$tmp340 ___443_f 	%line{81} %argrw{"wr"}
	if		$tmp340 984 984 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:82
#     return 0.0;
	assign		$tmp338 $const2 	%line{82} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:83
#   return f;
	assign		$tmp338 ___443_f 	%line{83} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:636
#     float signal = (safe_snoise(p) + offset) * pwr;
	add		$tmp341 $tmp338 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{636} %argrw{"wrr"}
	mul		___576_signal $tmp341 ___574_pwr 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:637
#     pwr *= pwHL;
	mul		___574_pwr ___574_pwr ___574_pwHL 	%line{637} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:638
#     value += weight * signal;
	mul		$tmp342 ___574_weight ___576_signal 	%line{638} %argrw{"wrr"}
	add		___574_value ___574_value $tmp342 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:639
#     weight *= gain * signal;
	mul		$tmp343 Gain ___576_signal 	%line{639} %argrw{"wrr"}
	mul		___574_weight ___574_weight $tmp343 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 1002 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:90
#     return a * vector4(b, b, b, b);
	assign		$tmp344.x lacunarity 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{90} %argrw{"wr"}
	assign		$tmp344.y lacunarity 	%argrw{"wr"}
	assign		$tmp344.z lacunarity 	%argrw{"wr"}
	assign		$tmp344.w lacunarity 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 1002 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___574_p.x ___574_p.x $tmp344.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{80} %argrw{"wrr"}
	mul		___574_p.y ___574_p.y $tmp344.y 	%argrw{"wrr"}
	mul		___574_p.z ___574_p.z $tmp344.z 	%argrw{"wrr"}
	mul		___574_p.w ___574_p.w $tmp344.w 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:631
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	assign		$tmp345 ___575_i 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{631} %argrw{"wr"}
	add		___575_i ___575_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:643
#   float rmd = octaves - floor(octaves);
	floor		$tmp346 octaves 	%line{643} %argrw{"wr"}
	sub		___574_rmd octaves $tmp346 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:644
#   if (rmd != 0.0) {
	neq		$tmp347 ___574_rmd $const2 	%line{644} %argrw{"wrr"}
	if		$tmp347 1020 1020 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:645
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	functioncall	$const10 1016 	%line{645} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:80
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp349 ___574_p.x ___574_p.y ___574_p.z 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{80} %argrw{"wrrr"}
	noise		___443_f $const11 $tmp349 ___574_p.w 	%argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:81
#   if (isinf(f))
	isinf		$tmp350 ___443_f 	%line{81} %argrw{"wr"}
	if		$tmp350 1015 1015 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:82
#     return 0.0;
	assign		$tmp348 $const2 	%line{82} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:83
#   return f;
	assign		$tmp348 ___443_f 	%line{83} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:645
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	add		$tmp351 $tmp348 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{645} %argrw{"wrr"}
	mul		$tmp352 $tmp351 ___574_pwr 	%argrw{"wrr"}
	mul		$tmp353 ___574_rmd $tmp352 	%argrw{"wrr"}
	add		___574_value ___574_value $tmp353 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:648
#   return value;
	assign		Fac ___574_value 	%line{648} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:789
#     else if (type == "ridged_multifractal") {
	eq		$tmp354 type $const18 	%line{789} %argrw{"wrr"}
	if		$tmp354 1081 1159 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:790
#       Fac = noise_musgrave_ridged_multi_fractal_4d(
	functioncall	$const40 1081 	%line{790} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:662
#   vector4 p = co;
	assign		___579_p.x ___603_p.x 	%line{662} %argrw{"wr"}
	assign		___579_p.y ___603_p.y 	%argrw{"wr"}
	assign		___579_p.z ___603_p.z 	%argrw{"wr"}
	assign		___579_p.w ___603_p.w 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:663
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp355 dimension 	%line{663} %argrw{"wr"}
	pow		___579_pwHL lacunarity $tmp355 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:664
#   float pwr = pwHL;
	assign		___579_pwr ___579_pwHL 	%line{664} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:666
#   float signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 1039 	%line{666} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:80
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp358 ___579_p.x ___579_p.y ___579_p.z 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{80} %argrw{"wrrr"}
	noise		___443_f $const11 $tmp358 ___579_p.w 	%argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:81
#   if (isinf(f))
	isinf		$tmp359 ___443_f 	%line{81} %argrw{"wr"}
	if		$tmp359 1038 1038 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:82
#     return 0.0;
	assign		$tmp357 $const2 	%line{82} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:83
#   return f;
	assign		$tmp357 ___443_f 	%line{83} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:666
#   float signal = offset - fabs(safe_snoise(p));
	fabs		$tmp356 $tmp357 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{666} %argrw{"wr"}
	sub		___579_signal Offset $tmp356 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:667
#   signal *= signal;
	mul		___579_signal ___579_signal ___579_signal 	%line{667} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:668
#   float value = signal;
	assign		___579_value ___579_signal 	%line{668} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:669
#   float weight = 1.0;
	assign		___579_weight $const8 	%line{669} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:671
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp362 1046 1049 1078 1080 	%line{671} %argrw{"r"}
	assign		___580_i $const12 	%argrw{"wr"}
	assign		$tmp360 octaves 	%argrw{"wr"}
	lt		$tmp361 ___580_i $tmp360 	%argrw{"wrr"}
	neq		$tmp362 $tmp361 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 1059 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:90
#     return a * vector4(b, b, b, b);
	assign		$tmp363.x lacunarity 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{90} %argrw{"wr"}
	assign		$tmp363.y lacunarity 	%argrw{"wr"}
	assign		$tmp363.z lacunarity 	%argrw{"wr"}
	assign		$tmp363.w lacunarity 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 1059 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___579_p.x ___579_p.x $tmp363.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{80} %argrw{"wrr"}
	mul		___579_p.y ___579_p.y $tmp363.y 	%argrw{"wrr"}
	mul		___579_p.z ___579_p.z $tmp363.z 	%argrw{"wrr"}
	mul		___579_p.w ___579_p.w $tmp363.w 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:673
#     weight = clamp(signal * gain, 0.0, 1.0);
	mul		$tmp364 ___579_signal Gain 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{673} %argrw{"wrr"}
	functioncall	$const4 1063 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\stdosl.h:163
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp365 $tmp364 $const8 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\stdosl.h"} %line{163} %argrw{"wrr"}
	max		___579_weight $tmp365 $const2 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:674
#     signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 1071 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{674} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:80
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp368 ___579_p.x ___579_p.y ___579_p.z 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{80} %argrw{"wrrr"}
	noise		___443_f $const11 $tmp368 ___579_p.w 	%argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:81
#   if (isinf(f))
	isinf		$tmp369 ___443_f 	%line{81} %argrw{"wr"}
	if		$tmp369 1070 1070 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:82
#     return 0.0;
	assign		$tmp367 $const2 	%line{82} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:83
#   return f;
	assign		$tmp367 ___443_f 	%line{83} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:674
#     signal = offset - fabs(safe_snoise(p));
	fabs		$tmp366 $tmp367 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{674} %argrw{"wr"}
	sub		___579_signal Offset $tmp366 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:675
#     signal *= signal;
	mul		___579_signal ___579_signal ___579_signal 	%line{675} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:676
#     signal *= weight;
	mul		___579_signal ___579_signal ___579_weight 	%line{676} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:677
#     value += signal * pwr;
	mul		$tmp370 ___579_signal ___579_pwr 	%line{677} %argrw{"wrr"}
	add		___579_value ___579_value $tmp370 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:678
#     pwr *= pwHL;
	mul		___579_pwr ___579_pwr ___579_pwHL 	%line{678} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:671
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp371 ___580_i 	%line{671} %argrw{"wr"}
	add		___580_i ___580_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:681
#   return value;
	assign		Fac ___579_value 	%line{681} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:793
#     else if (type == "hetero_terrain") {
	eq		$tmp372 type $const20 	%line{793} %argrw{"wrr"}
	if		$tmp372 1158 1159 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:794
#       Fac = noise_musgrave_hetero_terrain_4d(p, dimension, lacunarity, octaves, Offset);
	functioncall	$const41 1158 	%line{794} %argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:588
#   vector4 p = co;
	assign		___570_p.x ___603_p.x 	%line{588} %argrw{"wr"}
	assign		___570_p.y ___603_p.y 	%argrw{"wr"}
	assign		___570_p.z ___603_p.z 	%argrw{"wr"}
	assign		___570_p.w ___603_p.w 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:589
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp373 dimension 	%line{589} %argrw{"wr"}
	pow		___570_pwHL lacunarity $tmp373 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:590
#   float pwr = pwHL;
	assign		___570_pwr ___570_pwHL 	%line{590} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:593
#   float value = offset + safe_snoise(p);
	functioncall	$const10 1099 	%line{593} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:80
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp375 ___570_p.x ___570_p.y ___570_p.z 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{80} %argrw{"wrrr"}
	noise		___443_f $const11 $tmp375 ___570_p.w 	%argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:81
#   if (isinf(f))
	isinf		$tmp376 ___443_f 	%line{81} %argrw{"wr"}
	if		$tmp376 1098 1098 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:82
#     return 0.0;
	assign		$tmp374 $const2 	%line{82} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:83
#   return f;
	assign		$tmp374 ___443_f 	%line{83} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:593
#   float value = offset + safe_snoise(p);
	add		___570_value Offset $tmp374 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{593} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 1110 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:90
#     return a * vector4(b, b, b, b);
	assign		$tmp377.x lacunarity 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{90} %argrw{"wr"}
	assign		$tmp377.y lacunarity 	%argrw{"wr"}
	assign		$tmp377.z lacunarity 	%argrw{"wr"}
	assign		$tmp377.w lacunarity 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 1110 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___570_p.x ___570_p.x $tmp377.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{80} %argrw{"wrr"}
	mul		___570_p.y ___570_p.y $tmp377.y 	%argrw{"wrr"}
	mul		___570_p.z ___570_p.z $tmp377.z 	%argrw{"wrr"}
	mul		___570_p.w ___570_p.w $tmp377.w 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:596
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp380 1112 1115 1138 1140 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{596} %argrw{"r"}
	assign		___571_i $const12 	%argrw{"wr"}
	assign		$tmp378 octaves 	%argrw{"wr"}
	lt		$tmp379 ___571_i $tmp378 	%argrw{"wrr"}
	neq		$tmp380 $tmp379 $const9 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:597
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 1123 	%line{597} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:80
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp382 ___570_p.x ___570_p.y ___570_p.z 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{80} %argrw{"wrrr"}
	noise		___443_f $const11 $tmp382 ___570_p.w 	%argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:81
#   if (isinf(f))
	isinf		$tmp383 ___443_f 	%line{81} %argrw{"wr"}
	if		$tmp383 1122 1122 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:82
#     return 0.0;
	assign		$tmp381 $const2 	%line{82} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:83
#   return f;
	assign		$tmp381 ___443_f 	%line{83} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:597
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp384 $tmp381 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{597} %argrw{"wrr"}
	mul		$tmp385 $tmp384 ___570_pwr 	%argrw{"wrr"}
	mul		___572_increment $tmp385 ___570_value 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:598
#     value += increment;
	add		___570_value ___570_value ___572_increment 	%line{598} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:599
#     pwr *= pwHL;
	mul		___570_pwr ___570_pwr ___570_pwHL 	%line{599} %argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 1138 	%line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:90
#     return a * vector4(b, b, b, b);
	assign		$tmp386.x lacunarity 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{90} %argrw{"wr"}
	assign		$tmp386.y lacunarity 	%argrw{"wr"}
	assign		$tmp386.z lacunarity 	%argrw{"wr"}
	assign		$tmp386.w lacunarity 	%argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:804
# 
	functioncall	$const23 1138 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{804} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h:80
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___570_p.x ___570_p.x $tmp386.x 	%filename{"C:\b\buildbot-worker-windows\windows_291\lib\win64_vc15\osl\shaders\vector4.h"} %line{80} %argrw{"wrr"}
	mul		___570_p.y ___570_p.y $tmp386.y 	%argrw{"wrr"}
	mul		___570_p.z ___570_p.z $tmp386.z 	%argrw{"wrr"}
	mul		___570_p.w ___570_p.w $tmp386.w 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:596
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp387 ___571_i 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{596} %argrw{"wr"}
	add		___571_i ___571_i $const12 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:603
#   float rmd = octaves - floor(octaves);
	floor		$tmp388 octaves 	%line{603} %argrw{"wr"}
	sub		___570_rmd octaves $tmp388 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:604
#   if (rmd != 0.0) {
	neq		$tmp389 ___570_rmd $const2 	%line{604} %argrw{"wrr"}
	if		$tmp389 1157 1157 	%argrw{"r"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:605
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 1152 	%line{605} %argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:80
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp391 ___570_p.x ___570_p.y ___570_p.z 	%filename{"C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h"} %line{80} %argrw{"wrrr"}
	noise		___443_f $const11 $tmp391 ___570_p.w 	%argrw{"wrrr"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:81
#   if (isinf(f))
	isinf		$tmp392 ___443_f 	%line{81} %argrw{"wr"}
	if		$tmp392 1151 1151 	%argrw{"r"}
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:82
#     return 0.0;
	assign		$tmp390 $const2 	%line{82} %argrw{"wr"}
	return
# C:\b\buildbot-worker-windows\windows_291\blender.git\intern\cycles\kernel\shaders\node_noise.h:83
#   return f;
	assign		$tmp390 ___443_f 	%line{83} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:605
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp393 $tmp390 Offset 	%filename{"C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl"} %line{605} %argrw{"wrr"}
	mul		$tmp394 $tmp393 ___570_pwr 	%argrw{"wrr"}
	mul		___573_increment $tmp394 ___570_value 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:606
#     value += rmd * increment;
	mul		$tmp395 ___570_rmd ___573_increment 	%line{606} %argrw{"wrr"}
	add		___570_value ___570_value $tmp395 	%argrw{"wrr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:609
#   return value;
	assign		Fac ___570_value 	%line{609} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:797
#       Fac = 0.0;
	assign		Fac $const2 	%line{797} %argrw{"wr"}
# C:/b/buildbot-worker-windows/windows_291/blender.git/intern/cycles/kernel/shaders/node_musgrave_texture.osl:801
#     Fac = 0.0;
	assign		Fac $const2 	%line{801} %argrw{"wr"}
	end
